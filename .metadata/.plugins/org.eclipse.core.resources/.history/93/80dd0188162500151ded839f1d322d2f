<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 接口方式调用时，namespace必须为接口的完全限定名，否则会提示找不到sql -->
<mapper namespace="fg.ab.dal.dao.inter.IBusinessBalanceRecord">
	<resultMap type="fg.ab.dal.model.BusinessBalanceRecord" id="myResultType">
		<id column="id" property="id" />
		<result column="busid" property="BusinessId" />
		<result column="mount2" property="Amount" />
		<result column="mystatus" property="Status" />
	</resultMap>
	<select id="selectBusinessBalanceByID2" parameterType="java.util.Map"
		resultType="fg.ab.dal.model.BusinessBalanceRecord">
		SELECT id,BusinessId as busid,Amount as mount2,Status as
		mystatus,Balance,RecordType,Operator,OperateTime,WithwardId,RelationNo,Remark
		FROM BusinessBalanceRecord WHERE
		RecordType=#{0} and
		OperateTime>=#{1}
	</select>
	<select id="selectBusinessBalanceByID" parameterType="java.util.Map"
		resultMap="myResultType">
		SELECT
		id,BusinessId,Amount,Status,Balance,RecordType,Operator,OperateTime,WithwardId,RelationNo,Remark
		FROM BusinessBalanceRecord WHERE
		RecordType=#{0} and
		OperateTime>=#{1}
	</select>

	<insert id="addBusinessBalance" parameterType="fg.ab.dal.model.BusinessBalanceRecord"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		BusinessBalanceRecord(BusinessId,Amount,Status,Balance,RecordType,Operator,OperateTime,WithwardId,RelationNo,Remark)
		values(#{BusinessId},#{Amount},#{Status},#{Balance},#{RecordType},#{Operator},#{OperateTime},#{WithwardId},#{RelationNo},#{Remark})
	</insert>
	<delete id="deleteBusinessBalance" parameterType="int">
		delete from
		BusinessBalanceRecord where id=#{id}
	</delete>
	<update id="updateBusinessBalance" parameterType="fg.ab.dal.model.BusinessBalanceRecord">
		update
		BusinessBalanceRecord set Amount=#{Amount},Balance=#{Balance} where
		id=#{id}
	</update>
	<update id="updateBusinessBalanceTest" parameterType="fg.ab.dal.model.BusinessBalanceRecord">
		update
		BusinessBalanceRecord set Amount=#{Amount},Balance=#{Balance}
		where
		id=#{id}
		<if test="Operator != null">
			and Operator = #{Operator}
		</if>
	</update>

	<!-- 类似于switch -->
	<select id="selectBusinessBalanceByIDTest" parameterType="java.util.Map"
		resultMap="myResultType">
		SELECT
		id,BusinessId,Amount,Status,Balance,RecordType,Operator,OperateTime,WithwardId,RelationNo,Remark
		FROM BusinessBalanceRecord WHERE
		RecordType=#{0} and
		OperateTime>=#{1}
		<choose>
			<when test="Operator != null">
				and Operator = #{Operator}
			</when>
			<when test="RelationNo != null">
				and RelationNo = #{RelationNo}
			</when>
			<otherwise>
				and Status = 1
			</otherwise>
		</choose>
	</select>
	<!-- 智能处理多余的and 或者or ，会自动添加空格 -->
	<select id="selectBusinessBalanceByIDTest2" parameterType="java.util.Map"
		resultMap="myResultType">
		SELECT
		id,BusinessId,Amount,Status,Balance,RecordType,Operator,OperateTime,WithwardId,RelationNo,Remark
		FROM BusinessBalanceRecord WHERE
		RecordType=#{0} and
		OperateTime>=#{1}
		<where>
			<if test="Operator != null">
			 and	Operator = #{Operator}
			</if>
			<if test="RelationNo != null">
				and RelationNo = #{RelationNo}
			</if>
		</where>
	</select>
<!-- 	java.util.List -->
<!-- 参数为java.util.List -->
<!-- 则map中，key=list -->
	<!-- 该属性是必须指定的，但是在不同情况下，该属性的值是不一样的，主要有一下3种情况： 
	如果传入的是单参数且参数类型是一个List的时候，collection属性值为list(map中key=list) 
		如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array(map中key=array)
		 如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可以封装成map， 
		实际上如果你在传入参数的时候，在MyBatis里面也是会把它封装成一个Map的，map的key就是参数名， 
		所以这个时候collection属性值就是传入的List或array对象在自己封装的map里面的key 
		例如： Map<String, Object> param = new HashMap<String, Object>(); 
		param.put("additionId", additionId); 
		param.put(""list"", additionValueList);
		 param.put("pageIndex", pageIndex); 
		 param.put("pageSize", pageSize); -->
	<select id="selectBusinessBalanceByIDTest5" parameterType="java.util.Map"
		resultMap="myResultType">
		SELECT
		id,BusinessId,Amount,Status,Balance,RecordType,Operator,OperateTime,WithwardId,RelationNo,Remark
		FROM BusinessBalanceRecord WHERE id in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>
	<update id="updateBusinessBalanceTest4" parameterType="fg.ab.dal.model.BusinessBalanceRecord">
		update
		BusinessBalanceRecord
		<set>
			<if test="Amount != null">
				Amount = #{Amount},
			</if>
			<if test="content != null">
				Balance = #{Balance},
			</if>
		</set>
		where
		id=#{id}
		<if test="Operator != null">
			and Operator = #{Operator}
		</if>
	</update>
</mapper>