<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace="com.edaisong.toolsapi.dao.inter.IUserDao">
 
    <resultMap type="com.edaisong.toolsentity.domain.User" id="baseResultMap">
        <id property="id" column="Id" jdbcType="INTEGER"></id>
        <result property="loginName" column="LoginName" jdbcType="NVARCHAR" />
        <result property="loginPwd" column="LoginPwd" jdbcType="NVARCHAR" />
        <result property="userName" column="UserName" jdbcType="NVARCHAR" />
        <result property="roleIds" column="RoleIds" jdbcType="VARCHAR" />
        <result property="isEnable" column="IsEnable" jdbcType="BIT" />
        <result property="isDisable" column="IsDisable" jdbcType="BIT" />
        <result property="createBy" column="CreateBy" jdbcType="NVARCHAR" />
        <result property="createTime" column="CreateTime" jdbcType="TIMESTAMP" />
    </resultMap>
 
    <sql id="baseColumnList">
        u.Id,u.LoginName,u.LoginPwd,u.UserName,u.RoleIds,u.IsEnable,u.IsDisable,u.CreateBy,u.CreateTime
    </sql>
 
    <insert id="insert" parameterType="com.edaisong.toolsentity.domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into [User](LoginName,LoginPwd,UserName,CreateBy)
        values(
            #{loginName,jdbcType=NVARCHAR},
            #{loginPwd,jdbcType=NVARCHAR},
            #{userName,jdbcType=NVARCHAR},
            #{createBy,jdbcType=NVARCHAR}
        )
    </insert>
 
    <update id="update" parameterType="com.edaisong.toolsentity.domain.User">
        update [User]
        set LoginName=#{loginName,jdbcType=NVARCHAR},
            LoginPwd=#{loginPwd,jdbcType=NVARCHAR},
            UserName=#{userName,jdbcType=NVARCHAR}
        where Id=#{id,jdbcType=INTEGER}
    </update>
 
    <update id="delete" parameterType="java.lang.Integer">
    	update [User] set IsEnable=0 where Id=#{id,jdbcType=INTEGER}
    </update>
    
    <update id="disable" parameterType="java.util.Map">
    	update [User] set IsDisable=#{isDisable,jdbcType=BIT} where Id=#{id,jdbcType=INTEGER}
    </update>
    
    <update id="setRoles" parameterType="java.util.Map">
    	update [User] set RoleIds=#{roleIds,jdbcType=VARCHAR} where Id=#{id,jdbcType=INTEGER}
    </update>
 
    <select id="getById" resultMap="baseResultMap" parameterType="java.lang.Integer">
        select <include refid="baseColumnList"></include> from [User] u(nolock) where u.Id=#{id,jdbcType=INTEGER}
    </select>
    
    <select id="getByName" resultMap="baseResultMap" parameterType="java.lang.String">
        select <include refid="baseColumnList"></include> from [User] u(nolock) where u.LoginName=#{loginName,jdbcType=NVARCHAR} and u.IsEnable=1
    </select>
 
    <select id="getAll" resultMap="baseResultMap">
        select <include refid="baseColumnList"></include> from [User] u(nolock) where u.IsEnable=1
    </select>
</mapper>