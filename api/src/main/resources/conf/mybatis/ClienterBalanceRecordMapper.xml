<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edaisong.api.dao.inter.IClienterBalanceRecordDao" >
  <resultMap id="BaseResultMap" type="com.edaisong.entity.ClienterBalanceRecord" >
    <id column="Id" property="id" jdbcType="BIGINT" />
    <result column="ClienterId" property="clienterid" jdbcType="INTEGER" />
    <result column="Amount" property="amount" jdbcType="DECIMAL" />
    <result column="Status" property="status" jdbcType="SMALLINT" />
    <result column="Balance" property="balance" jdbcType="DECIMAL" />
    <result column="RecordType" property="recordtype" jdbcType="SMALLINT" />
    <result column="Operator" property="operator" jdbcType="NVARCHAR" />
    <result column="OperateTime" property="operatetime" jdbcType="TIMESTAMP" />
    <result column="WithwardId" property="withwardid" jdbcType="BIGINT" />
    <result column="RelationNo" property="relationno" jdbcType="VARCHAR" />
    <result column="Remark" property="remark" jdbcType="NVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, ClienterId, Amount, Status, Balance, RecordType, Operator, OperateTime, WithwardId, 
    RelationNo, Remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ClienterBalanceRecord
    where Id = #{id,jdbcType=BIGINT}
  </select>
   <select id="getRecordListByCId" resultMap="BaseResultMap" parameterType="java.util.Map" >   
    select 
    <include refid="Base_Column_List" />
    from ClienterBalanceRecord
    where ClienterId =#{clienterid,jdbcType=INTEGER}
  </select>
  <sql id="queryWhere">
		1=1
		<if test="clienterId != null and clienterId>0">
			and clienterId=${clienterId}
		</if>
	</sql>
  <select id="query" resultType="com.edaisong.entity.ClienterBalanceRecord" 
  parameterType="com.edaisong.entity.req.PagedClienterBalanceRecordReq" 
  statementType="CALLABLE">
{call Sp_CustomPage2015_V1(
' id desc ',
' id,clienterid,amount,status,balance,recordtype,
 operator,operatetime, withwardid, relationno, remark ',
' dbo.ClienterBalanceRecord ',
'<include refid="queryWhere" />',
#{pageSize,mode=IN,jdbcType=INTEGER},
#{currentPage,mode=IN,jdbcType=INTEGER}
,1,
#{totalRecord,mode=OUT,jdbcType=INTEGER},
#{totalPage,mode=OUT,jdbcType=INTEGER}
)}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ClienterBalanceRecord
    where Id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.edaisong.entity.ClienterBalanceRecord" >
    insert into
		ClienterBalanceRecord
		(ClienterId,Amount,Status,Balance,RecordType,Operator,WithwardId,RelationNo,Remark)
		select #{clienterid,jdbcType=INTEGER},
		#{amount,jdbcType=DECIMAL},#{status,jdbcType=SMALLINT},c.AccountBalance,#{recordtype,jdbcType=SMALLINT},#{operator,jdbcType=NVARCHAR}
		,#{withwardid,jdbcType=BIGINT},#{relationno,jdbcType=VARCHAR},#{remark,jdbcType=NVARCHAR}
		from dbo.clienter  as c where Id=#{clienterid,jdbcType=INTEGER} ;
		select @@IDENTITY
  </insert>
  <insert id="insertSelective" parameterType="com.edaisong.entity.ClienterBalanceRecord" >
    insert into ClienterBalanceRecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="clienterid != null" >
        ClienterId,
      </if>
      <if test="amount != null" >
        Amount,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="balance != null" >
        Balance,
      </if>
      <if test="recordtype != null" >
        RecordType,
      </if>
      <if test="operator != null" >
        Operator,
      </if>
      <if test="operatetime != null" >
        OperateTime,
      </if>
      <if test="withwardid != null" >
        WithwardId,
      </if>
      <if test="relationno != null" >
        RelationNo,
      </if>
      <if test="remark != null" >
        Remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="clienterid != null" >
        #{clienterid,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="recordtype != null" >
        #{recordtype,jdbcType=SMALLINT},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=NVARCHAR},
      </if>
      <if test="operatetime != null" >
        #{operatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="withwardid != null" >
        #{withwardid,jdbcType=BIGINT},
      </if>
      <if test="relationno != null" >
        #{relationno,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.edaisong.entity.ClienterBalanceRecord" >
    update ClienterBalanceRecord
    <set >
      <if test="clienterid != null" >
        ClienterId = #{clienterid,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        Amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="balance != null" >
        Balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="recordtype != null" >
        RecordType = #{recordtype,jdbcType=SMALLINT},
      </if>
      <if test="operator != null" >
        Operator = #{operator,jdbcType=NVARCHAR},
      </if>
      <if test="operatetime != null" >
        OperateTime = #{operatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="withwardid != null" >
        WithwardId = #{withwardid,jdbcType=BIGINT},
      </if>
      <if test="relationno != null" >
        RelationNo = #{relationno,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        Remark = #{remark,jdbcType=NVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edaisong.entity.ClienterBalanceRecord" >
    update ClienterBalanceRecord
    set ClienterId = #{clienterid,jdbcType=INTEGER},
      Amount = #{amount,jdbcType=DECIMAL},
      Status = #{status,jdbcType=SMALLINT},
      Balance = #{balance,jdbcType=DECIMAL},
      RecordType = #{recordtype,jdbcType=SMALLINT},
      Operator = #{operator,jdbcType=NVARCHAR},
      OperateTime = #{operatetime,jdbcType=TIMESTAMP},
      WithwardId = #{withwardid,jdbcType=BIGINT},
      RelationNo = #{relationno,jdbcType=VARCHAR},
      Remark = #{remark,jdbcType=NVARCHAR}
    where Id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 根据订单获取对象 add by caoheyang  20150831 -->
     <select id="getByOrderId" resultType="com.edaisong.entity.ClienterBalanceRecord" parameterType="java.util.Map" >   
  select top 1  Id,ClienterId,Amount,Status,Balance,RecordType,Operator,OperateTime,RelationNo,Remark
from  ClienterBalanceRecord (nolock)
where  WithwardId= #{id,jdbcType=BIGINT} and Remark='无效订单'
  </select>
  <!-- 骑士获取月账单列表 茹化肖 2015年9月14日17:01:28 -->
  <select id="getAccountBillCList" resultType="com.edaisong.entity.domain.AccountBillModel">
		select
		Convert ( varchar(10), OperateTime, 120) as DayInfo,
		SUM(CASE WHEN Amount>0 THEN Amount ELSE 0 END) as InMoney,
		SUM(CASE WHEN 0>=Amount THEN Amount ELSE 0 END) as OutMoney
		FROM
		 ClienterBalanceRecord (NOLOCK)
 		 WHERE ClienterId=#{clienterId,jdbcType=INTEGER}
 		AND RecordType!=7
		AND OperateTime > #{startDate,jdbcType=VARCHAR} 
		AND #{endDate,jdbcType=VARCHAR} > OperateTime
		GROUP by
		Convert ( VARCHAR(10), OperateTime, 120)
	</select>
	<!-- 获取骑士日账单分页 的Where条件 茹化肖 -->
	<sql id="getAccountBillDayCList_Where">
		ClienterId=${clienterId}
		AND OperateTime > ''${stratDate}''
		AND ''${endDate}'' >= OperateTime
		<if test="billType == 1"><!-- 出账 -->
			AND 0>Amount
		</if>
		<if test="billType == 2"><!-- 入账 -->
			AND Amount>=0
		</if>
		<if test="recordType !=0"><!--非全部 -->
			AND RecordType = ${recordType}
		</if>
		AND RecordType!=7
	</sql>
		<!-- 获取骑士日账单分页 茹化肖 2015年9月10日19:06:57 -->
	<select id="getAccountBillDayCList" resultType="com.edaisong.entity.domain.AccountBillDayCModel"
		parameterType="com.edaisong.entity.req.PagedAccountBillDayCReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' OperateTime DESC ',
		' RelationNo,Amount,RecordType,OperateTime,id AS RecordId ',
		'   dbo.ClienterBalanceRecord AS cbr (NOLOCK)   ',
		'
		<include refid="getAccountBillDayCList_Where" />
		',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER},
		1,
		#{totalRecord,mode=OUT,jdbcType=VARCHAR},
		#{totalPage,mode=OUT,jdbcType=VARCHAR}
		)}
	</select>
		<!--骑士获取账单详情API  茹化肖 2015年9月14日12:59:11  -->
	<select id="getAccountBillDetailC" resultType="com.edaisong.entity.domain.AccountBillDetailCModel"
		parameterType="com.edaisong.entity.req.AccountBillDetailCReq">
	  		 SELECT Amount ,
        Status ,
        WithwardId ,
        RelationNo ,
        RecordType ,
        OperateTime ,
        Remark ,
        CASE WHEN RecordType IN ( 1, 2,11 ) THEN '订单号'
             ELSE '交易流水号'
        END AS NoDesc ,
        CASE WHEN RecordType IN ( 1,2,11 ) THEN 1
             ELSE 0
        END AS IsOrder
 FROM   dbo.ClienterBalanceRecord AS bbr ( NOLOCK )
 WHERE  bbr.id=#{recordId,jdbcType=INTEGER}
 		AND ClienterId=#{clienterId,jdbcType=INTEGER}
	</select>
	<select id="getAccountInMoneyAndOutMoney" resultType="com.edaisong.entity.domain.AccountBillDayCResultModel">
SELECT 
sum(case when 0>Amount then amount else 0 end) as outMoney,
sum(case when Amount>0 then amount else 0 end) as inMoney
 FROM dbo.ClienterBalanceRecord cbr(nolock)
where 
ClienterId=${clienterId} and RecordType!=7
AND OperateTime > #{startDate,jdbcType=VARCHAR} 
AND #{endDate,jdbcType=VARCHAR} > OperateTime
 group by ClienterId
	</select>
</mapper>