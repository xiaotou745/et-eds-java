<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edaisong.api.dao.inter.IBusinessBalanceRecordDao">
	<resultMap id="BaseResultMap" type="com.edaisong.entity.BusinessBalanceRecord">
		<id column="Id" property="id" jdbcType="BIGINT" />
		<result column="BusinessId" property="businessid" jdbcType="INTEGER" />
		<result column="Amount" property="amount" jdbcType="DECIMAL" />
		<result column="Status" property="status" jdbcType="SMALLINT" />
		<result column="Balance" property="balance" jdbcType="DECIMAL" />
		<result column="RecordType" property="recordtype" jdbcType="SMALLINT" />
		<result column="Operator" property="operator" jdbcType="NVARCHAR" />
		<result column="OperateTime" property="operatetime" jdbcType="TIMESTAMP" />
		<result column="WithwardId" property="withwardid" jdbcType="BIGINT" />
		<result column="RelationNo" property="relationno" jdbcType="VARCHAR" />
		<result column="Remark" property="remark" jdbcType="NVARCHAR" />
		<result column="IsEnable" jdbcType="SMALLINT" property="isenable" />
		<result column="groupid" jdbcType="INTEGER" property="groupid" />
		<result column="groupafterbalance" jdbcType="DECIMAL" property="groupafterbalance" />
		<result column="groupamount" jdbcType="DECIMAL" property="groupamount" />
	</resultMap>
	<sql id="Base_Column_List">
		Id, BusinessId, Amount, Status, Balance, RecordType, Operator,
		OperateTime, WithwardId,
		RelationNo, Remark, IsEnable, groupid, groupafterbalance, groupamount
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from BusinessBalanceRecord
		where Id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from BusinessBalanceRecord
		where Id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.edaisong.entity.BusinessBalanceRecord">
		insert into
		BusinessBalanceRecord
		(BusinessId,Amount,Status,Balance,RecordType,Operator,
		WithwardId,RelationNo,Remark,groupid,groupafterbalance,groupamount)
		select
		#{businessid,jdbcType=INTEGER},
		#{amount,jdbcType=DECIMAL},#{status,jdbcType=SMALLINT},b.BalancePrice,#{recordtype,jdbcType=SMALLINT},#{operator,jdbcType=NVARCHAR}
		,#{withwardid,jdbcType=BIGINT},#{relationno,jdbcType=VARCHAR},#{remark,jdbcType=NVARCHAR}
		,#{groupid,jdbcType=INTEGER}, #{groupafterbalance,jdbcType=DECIMAL}, #{groupamount,jdbcType=DECIMAL}
		from dbo.business as b where
		Id=#{businessid,jdbcType=INTEGER} ;
		select @@IDENTITY
	</insert>
	<insert id="groupInsert" parameterType="com.edaisong.entity.BusinessBalanceRecord">
		insert into BusinessBalanceRecord
		(BusinessId,Amount,Status,Balance,RecordType,
		Operator,WithwardId,RelationNo,Remark,groupid,groupafterbalance,groupamount)
		values(#{businessid,jdbcType=INTEGER},
		#{amount,jdbcType=DECIMAL},
		#{status,jdbcType=SMALLINT},
		0,
		#{recordtype,jdbcType=SMALLINT},
		#{operator,jdbcType=NVARCHAR},
		#{withwardid,jdbcType=BIGINT},
		#{relationno,jdbcType=VARCHAR},
		#{remark,jdbcType=NVARCHAR},
		#{groupid,jdbcType=INTEGER}, 
		#{groupafterbalance,jdbcType=DECIMAL}, 
		#{groupamount,jdbcType=DECIMAL})
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.edaisong.entity.BusinessBalanceRecord">
		update BusinessBalanceRecord
		<set>
			<if test="businessid != null">
				BusinessId = #{businessid,jdbcType=INTEGER},
			</if>
			<if test="amount != null">
				Amount = #{amount,jdbcType=DECIMAL},
			</if>
			<if test="status != null">
				Status = #{status,jdbcType=SMALLINT},
			</if>
			<if test="balance != null">
				Balance = #{balance,jdbcType=DECIMAL},
			</if>
			<if test="recordtype != null">
				RecordType = #{recordtype,jdbcType=SMALLINT},
			</if>
			<if test="operator != null">
				Operator = #{operator,jdbcType=NVARCHAR},
			</if>
			<if test="operatetime != null">
				OperateTime = #{operatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="withwardid != null">
				WithwardId = #{withwardid,jdbcType=BIGINT},
			</if>
			<if test="relationno != null">
				RelationNo = #{relationno,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				Remark = #{remark,jdbcType=NVARCHAR},
			</if>
			<if test="isenable != null">
				IsEnable = #{isenable,jdbcType=SMALLINT},
			</if>
			<if test="groupid != null">
				groupid = #{groupid,jdbcType=INTEGER},
			</if>
			<if test="groupafterbalance != null">
				groupafterbalance = #{groupafterbalance,jdbcType=DECIMAL},
			</if>
			<if test="groupamount != null">
				groupamount = #{groupamount,jdbcType=DECIMAL},
			</if>
		</set>
		where Id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.edaisong.entity.BusinessBalanceRecord">
		update BusinessBalanceRecord
		set BusinessId = #{businessid,jdbcType=INTEGER},
		Amount = #{amount,jdbcType=DECIMAL},
		Status = #{status,jdbcType=SMALLINT},
		Balance = #{balance,jdbcType=DECIMAL},
		RecordType = #{recordtype,jdbcType=SMALLINT},
		Operator = #{operator,jdbcType=NVARCHAR},
		OperateTime = #{operatetime,jdbcType=TIMESTAMP},
		WithwardId = #{withwardid,jdbcType=BIGINT},
		RelationNo = #{relationno,jdbcType=VARCHAR},
		Remark = #{remark,jdbcType=NVARCHAR},
		IsEnable = #{isenable,jdbcType=SMALLINT},
		groupid = #{groupid,jdbcType=INTEGER},
		groupafterbalance = #{groupafterbalance,jdbcType=DECIMAL},
		groupamount = #{groupamount,jdbcType=DECIMAL}
		where Id = #{id,jdbcType=BIGINT}
	</update>
	<!-- 获取交易明细的Where条件 -->
	<sql id="getTransDetailListWhere">
		1=1
		<if test="startDate != null and startDate != ''">
			AND bbr.OperateTime >=''${startDate}''
		</if>
		<if test="endDate != null and endDate != ''">
			AND ''${endDate}'' > bbr.OperateTime
		</if>
		<if test="recordType != null and recordType != '' and recordType != -1">
			AND bbr.RecordType =${recordType}
		</if>
		<if test="businessID !=null and businessID!=0">
			AND bbr.BusinessId=${businessID}
		</if>
		<if test="relationNo !=null and relationNo!=''">
			AND bbr.relationNo=''${relationNo}''
		</if>
	</sql>
	<!-- 获取收支明细的分页存储过程 -->
	<select id="getTransDetailList" resultType="com.edaisong.entity.BusinessBalanceRecord"
		parameterType="com.edaisong.entity.req.PagedTransDetailReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' bbr.OperateTime DESC ',
		' bbr.RecordType,ISNULL(bbr.RelationNo,'''') AS
		RelationNo,isnull(bbr.WithwardId,0) as
		WithwardId,bbr.Amount,bbr.Balance,bbr.Status,OperateTime,Remark,Operator,bbr.groupid
		',
		' BusinessBalanceRecord AS bbr (nolock) ',
		'
		<include refid="getTransDetailListWhere" />
		',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER},
		1,
		#{totalRecord,mode=OUT,jdbcType=VARCHAR},
		#{totalPage,mode=OUT,jdbcType=VARCHAR}
		)}
	</select>
	<!-- 商家中心交易明细列表，右上角自定义查询，zhaohailong 20150821 -->
	<sql id="customerGetTransDetailListWhere">
		1=1
		<if test="search != null and search!='' and businessID>0">
			and bbr.BusinessId=${businessID} and (bbr.RelationNo=''${search}''
			or convert(varchar(20),bbr.WithwardId)=''${search}'')
		</if>
	</sql>
	<!-- 商家中心交易明细列表，右上角自定义查询，zhaohailong 20150821 -->
	<select id="customerGetTransDetailList" resultType="com.edaisong.entity.BusinessBalanceRecord"
		parameterType="com.edaisong.entity.req.PagedCustomerSearchReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' bbr.OperateTime DESC ',
		' bbr.RecordType,ISNULL(bbr.RelationNo,'''') AS
		RelationNo,isnull(bbr.WithwardId,0) as
		WithwardId,bbr.Amount,bbr.Balance,bbr.Status,OperateTime ',
		' BusinessBalanceRecord AS bbr (nolock) ',
		'
		<include refid="customerGetTransDetailListWhere" />
		',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER},
		1,
		#{totalRecord,mode=OUT,jdbcType=VARCHAR},
		#{totalPage,mode=OUT,jdbcType=VARCHAR}
		)}
	</select>

	<select id="queryBusinessRechargeTotalAmount" resultType="double"
		parameterType="java.util.HashMap">
		SELECT ISNULL(SUM(bbr.amount),0) AS totalAmount
		FROM BusinessBalanceRecord bbr ( NOLOCK )
		INNER JOIN dbo.business b ( NOLOCK ) ON bbr.BusinessId = b.Id
		where bbr.status=1
		<if test="businessId != null and businessId != ''">
			AND bbr.BusinessId='${businessId}'
		</if>
		<if test="startDate != null and startDate != ''">
			AND bbr.operatetime>='${startDate}'
		</if>

		<if test="endDate != null and endDate != ''">
			AND '${endDate}'>bbr.operatetime
		</if>

		<if test="name != null and name != ''">
			AND Name='${name}'
		</if>
		<if test="phoneNo != null and phoneNo != ''">
			AND PhoneNo='${phoneNo}'
		</if>
		<if test="cityId != null and cityId != ''">
			AND CityId='${cityId}'
		</if>
		<if test="rechargePrice>0">
			AND Amount>=${rechargePrice}
		</if>
		<choose>
			<when test="rechargeType>0">
				<if test="rechargeType==3">
					and RecordType=12
				</if>
				<if test="rechargeType==1">
					and bbr.RecordType=9 AND Remark!='商家客户端充值'
				</if>
				<if test="rechargeType==2">
					and bbr.RecordType=9 AND Remark='商家客户端充值'
				</if>
			</when>
			<otherwise>
				and (bbr.RecordType=9 or RecordType=12)
			</otherwise>
		</choose>
	</select>

	<select id="getBusinessBalanceRecordListForExport"
		resultType="com.edaisong.entity.domain.BusinessBalanceRecordModel"
		parameterType="com.edaisong.entity.req.PagedTransDetailReq">
		SELECT bbr.[Id]
		,bbr.[BusinessId]
		,bbr.[Amount]
		,bbr.[Status]
		,bbr.[Balance]
		,bbr.[RecordType]
		,bbr.[Operator]
		,bbr.[OperateTime]
		,bbr.[WithwardId]
		,bbr.[RelationNo]
		,bbr.[Remark]
		,bbr.[IsEnable]
		,bbr.[groupid]
		,bbr.[groupafterbalance]
		,bfa.AccountNo
		,bfa.OpenBank
		FROM [BusinessBalanceRecord] bbr WITH(NOLOCK)
		LEFT JOIN BusinessFinanceAccount bfa WITH(NOLOCK) ON
		bbr.BusinessId=bfa.BusinessId
		WHERE bbr.BusinessId=#{businessID,jdbcType=INTEGER}
		<if test="recordType>0">
			AND bbr.[RecordType]=#{recordType,jdbcType=INTEGER}
		</if>
		<if test="relationNo != null and relationNo != ''">
			AND bbr.[RelationNo]=#{relationNo,jdbcType=VARCHAR}
		</if>
		<if test="startDate != null and startDate != ''">
			AND
			CONVERT(CHAR(10),bbr.OperateTime,120)>=CONVERT(CHAR(10),#{startDate,jdbcType=VARCHAR},120)
		</if>
		<if test="endDate != null and endDate != ''">
			AND CONVERT(CHAR(10),#{endDate,jdbcType=VARCHAR},120) >
			CONVERT(CHAR(10),bbr.OperateTime,120)
		</if>
		ORDER BY bbr.Id DESC
	</select>
	<select id="getAccountBillBList" resultType="com.edaisong.entity.domain.AccountBillModel">
		select
		Convert ( varchar(10), OperateTime, 120) as DayInfo,
		SUM(CASE WHEN Amount>0 THEN Amount ELSE 0 END) as InMoney,
		SUM(CASE WHEN 0>=Amount THEN Amount ELSE 0 END) as OutMoney
		FROM
		BusinessBalanceRecord (NOLOCK)
		WHERE BusinessId=#{businessId,jdbcType=INTEGER}
		AND OperateTime > #{startDate,jdbcType=VARCHAR} AND
		#{endDate,jdbcType=VARCHAR} > OperateTime
		AND RecordType IN (1,2,3,5,8,9,12)
		GROUP by
		Convert ( VARCHAR(10), OperateTime, 120)
	</select>
	<!-- 获取商户日账单分页 的Where条件 茹化肖 -->
	<sql id="getAccountBillDayBList_Where">
		BusinessId=${businessId}
		AND OperateTime > ''${stratDate}''
		AND ''${endDate}'' >= OperateTime
		<if test="billType == 1"><!-- 出账 -->
			AND RecordType IN (1,3)
		</if>
		<if test="billType == 2"><!-- 入账 -->
			AND RecordType IN (2,5,8,9,12)
		</if>
		<if test="recordType !=0"><!--非全部 -->
			AND RecordType = ${recordType}
		</if>
		AND RecordType IN (1,2,3,5,8,9,12)
	</sql>
	<!-- 获取商户日账单分页 茹化肖 2015年9月10日19:06:57 -->
	<select id="getAccountBillDayBList" resultType="com.edaisong.entity.domain.AccountBillDayModel"
		parameterType="com.edaisong.entity.req.PagedAccountBillDayReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' OperateTime DESC ',
		' RelationNo,Amount,RecordType,OperateTime,id AS RecordId ',
		' BusinessBalanceRecord (NOLOCK) ',
		'
		<include refid="getAccountBillDayBList_Where" />
		',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER},
		1,
		#{totalRecord,mode=OUT,jdbcType=VARCHAR},
		#{totalPage,mode=OUT,jdbcType=VARCHAR}
		)}
	</select>
	<!--商家获取账单详情API  茹化肖  2015年9月11日15:56:17  -->
	<select id="getAccountBillDetailB" resultType="com.edaisong.entity.domain.AccountBillDetailModel"
		parameterType="com.edaisong.entity.req.AccountBillDetailReq">
		 SELECT Amount ,
        Status ,
        WithwardId ,
        RelationNo ,
        RecordType ,
        OperateTime ,
        Remark ,
        CASE WHEN RecordType IN ( 1, 2, 8 ) THEN '订单号'
             ELSE '交易流水号'
        END AS NoDesc ,
        CASE WHEN RecordType IN ( 1, 2, 8 ) THEN 1
             ELSE 0
        END AS IsOrder
 FROM   dbo.BusinessBalanceRecord AS bbr ( NOLOCK )
 WHERE bbr.id=#{recordId,jdbcType=INTEGER}
 		AND BusinessId=#{businessId,jdbcType=INTEGER}
	</select>
</mapper>