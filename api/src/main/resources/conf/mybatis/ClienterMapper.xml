<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edaisong.api.dal.dao.inter.IClienterDao" >
  <resultMap id="BaseResultMap" type="com.edaisong.entity.Clienter" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="PhoneNo" property="phoneno" jdbcType="VARCHAR" />
    <result column="LoginName" property="loginname" jdbcType="NVARCHAR" />
    <result column="recommendPhone" property="recommendphone" jdbcType="NVARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="TrueName" property="truename" jdbcType="NVARCHAR" />
    <result column="IDCard" property="idcard" jdbcType="NVARCHAR" />
    <result column="PicWithHandUrl" property="picwithhandurl" jdbcType="NVARCHAR" />
    <result column="PicUrl" property="picurl" jdbcType="NVARCHAR" />
    <result column="Status" property="status" jdbcType="TINYINT" />
    <result column="AccountBalance" property="accountbalance" jdbcType="NUMERIC" />
    <result column="InsertTime" property="inserttime" jdbcType="TIMESTAMP" />
    <result column="InviteCode" property="invitecode" jdbcType="NVARCHAR" />
    <result column="City" property="city" jdbcType="NVARCHAR" />
    <result column="CityId" property="cityid" jdbcType="NVARCHAR" />
    <result column="GroupId" property="groupid" jdbcType="INTEGER" />
    <result column="HealthCardID" property="healthcardid" jdbcType="NCHAR" />
    <result column="InternalDepart" property="internaldepart" jdbcType="NVARCHAR" />
    <result column="ProvinceCode" property="provincecode" jdbcType="NVARCHAR" />
    <result column="AreaCode" property="areacode" jdbcType="NVARCHAR" />
    <result column="CityCode" property="citycode" jdbcType="NVARCHAR" />
    <result column="Province" property="province" jdbcType="NVARCHAR" />
    <result column="BussinessID" property="bussinessid" jdbcType="INTEGER" />
    <result column="WorkStatus" property="workstatus" jdbcType="INTEGER" />
    <result column="AllowWithdrawPrice" property="allowwithdrawprice" jdbcType="DECIMAL" />
    <result column="HasWithdrawPrice" property="haswithdrawprice" jdbcType="DECIMAL" />
    <result column="IsBind" property="isbind" jdbcType="SMALLINT" />
    <result column="DeliveryCompanyId" property="deliverycompanyid" jdbcType="INTEGER" />
  </resultMap>
     <resultMap id="PageResultMap" type="com.edaisong.entity.Page" >
    <result column="TotalRecord" property="totalRecord" jdbcType="INTEGER" />
    <result column="TotalPage" property="totalPage" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, PhoneNo, LoginName, recommendPhone, Password, TrueName, IDCard, PicWithHandUrl, 
    PicUrl, Status, AccountBalance, InsertTime, InviteCode, City, CityId, GroupId, HealthCardID, 
    InternalDepart, ProvinceCode, AreaCode, CityCode, Province, BussinessID, WorkStatus, 
    AllowWithdrawPrice, HasWithdrawPrice, IsBind, DeliveryCompanyId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from clienter
    where Id = #{id,jdbcType=INTEGER}
  </select>  

  <select id="query" resultType="com.edaisong.entity.domain.ClienterModel" parameterType="java.util.Map" statementType="CALLABLE">
<![CDATA[  
{call Sp_CustomPage2015_V1(
' c.id desc ',
' c.id,c.trueName,c.phoneNo,c.idCard,c.accountBalance, c.picWithHandUrl,c.picUrl,
      c.insertTime,c.workStatus,c.allowWithdrawPrice,c.status,
      isnull(g.groupName,'') as groupName,
      dc.Id as deliveryCompanyId,isnull(dc.deliveryCompanyName,'') as deliveryCompanyName,
      cl.PhoneNo as recommendPhone ',
' dbo.clienter c   with(nolock)
   left join dbo.[Group] g   with(nolock) on c.GroupId=g.id
   left join dbo.DeliveryCompany dc with(nolock) on c.DeliveryCompanyId=dc.id
   left join  dbo.clienter cl with(nolock) on c.recommendPhone=cl.PhoneNo ',
#{Where,mode=IN,jdbcType=VARCHAR},
#{PageSize,mode=IN,jdbcType=INTEGER},
#{CurrentPage,mode=IN,jdbcType=INTEGER},
1,
#{TotalRecord,mode=OUT,jdbcType=VARCHAR},
#{TotalPage,mode=OUT,jdbcType=VARCHAR}
)}
	]]>  
  </select>

  
  <select id="getClienterList" resultType="com.edaisong.entity.domain.ClienterModel" parameterType="java.util.Map" >     
  select c.id,c.trueName,c.phoneNo,c.idCard,c.accountBalance, c.picWithHandUrl,c.picUrl,
      c.insertTime,c.workStatus,c.allowWithdrawPrice,c.status,
      isnull(g.groupName,'') as groupName,
      dc.Id as deliveryCompanyId,isnull(dc.deliveryCompanyName,'') as deliveryCompanyName,
      cl.PhoneNo as recommendPhone, isnull(cl.TrueName+'/'+cl.PhoneNo,'') as recommendName
   from    dbo.clienter c   with(nolock)
   left join dbo.[Group] g   with(nolock) on c.GroupId=g.id
   left join dbo.DeliveryCompany dc with(nolock) on c.DeliveryCompanyId=dc.id
   left join  dbo.clienter cl with(nolock) on c.recommendPhone=cl.PhoneNo   
    <if test="trueName != null" >
       and  g.trueName=#{trueName}
    </if>   
     <if test="phoneNo != null" >
       and  gc.phoneNo=#{phoneNo}
    </if>   
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from clienter
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.edaisong.entity.Clienter" >
    insert into clienter (Id, PhoneNo, LoginName, 
      recommendPhone, Password, TrueName, 
      IDCard, PicWithHandUrl, PicUrl, 
      Status, AccountBalance, InsertTime, 
      InviteCode, City, CityId, 
      GroupId, HealthCardID, InternalDepart, 
      ProvinceCode, AreaCode, CityCode, 
      Province, BussinessID, WorkStatus, 
      AllowWithdrawPrice, HasWithdrawPrice, IsBind, 
      DeliveryCompanyId)
    values (#{id,jdbcType=INTEGER}, #{phoneno,jdbcType=VARCHAR}, #{loginname,jdbcType=NVARCHAR}, 
      #{recommendphone,jdbcType=NVARCHAR}, #{password,jdbcType=VARCHAR}, #{truename,jdbcType=NVARCHAR}, 
      #{idcard,jdbcType=NVARCHAR}, #{picwithhandurl,jdbcType=NVARCHAR}, #{picurl,jdbcType=NVARCHAR}, 
      #{status,jdbcType=TINYINT}, #{accountbalance,jdbcType=NUMERIC}, #{inserttime,jdbcType=TIMESTAMP}, 
      #{invitecode,jdbcType=NVARCHAR}, #{city,jdbcType=NVARCHAR}, #{cityid,jdbcType=NVARCHAR}, 
      #{groupid,jdbcType=INTEGER}, #{healthcardid,jdbcType=NCHAR}, #{internaldepart,jdbcType=NVARCHAR}, 
      #{provincecode,jdbcType=NVARCHAR}, #{areacode,jdbcType=NVARCHAR}, #{citycode,jdbcType=NVARCHAR}, 
      #{province,jdbcType=NVARCHAR}, #{bussinessid,jdbcType=INTEGER}, #{workstatus,jdbcType=INTEGER}, 
      #{allowwithdrawprice,jdbcType=DECIMAL}, #{haswithdrawprice,jdbcType=DECIMAL}, #{isbind,jdbcType=SMALLINT}, 
      #{deliverycompanyid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.edaisong.entity.Clienter" >
    insert into clienter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="phoneno != null" >
        PhoneNo,
      </if>
      <if test="loginname != null" >
        LoginName,
      </if>
      <if test="recommendphone != null" >
        recommendPhone,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="truename != null" >
        TrueName,
      </if>
      <if test="idcard != null" >
        IDCard,
      </if>
      <if test="picwithhandurl != null" >
        PicWithHandUrl,
      </if>
      <if test="picurl != null" >
        PicUrl,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="accountbalance != null" >
        AccountBalance,
      </if>
      <if test="inserttime != null" >
        InsertTime,
      </if>
      <if test="invitecode != null" >
        InviteCode,
      </if>
      <if test="city != null" >
        City,
      </if>
      <if test="cityid != null" >
        CityId,
      </if>
      <if test="groupid != null" >
        GroupId,
      </if>
      <if test="healthcardid != null" >
        HealthCardID,
      </if>
      <if test="internaldepart != null" >
        InternalDepart,
      </if>
      <if test="provincecode != null" >
        ProvinceCode,
      </if>
      <if test="areacode != null" >
        AreaCode,
      </if>
      <if test="citycode != null" >
        CityCode,
      </if>
      <if test="province != null" >
        Province,
      </if>
      <if test="bussinessid != null" >
        BussinessID,
      </if>
      <if test="workstatus != null" >
        WorkStatus,
      </if>
      <if test="allowwithdrawprice != null" >
        AllowWithdrawPrice,
      </if>
      <if test="haswithdrawprice != null" >
        HasWithdrawPrice,
      </if>
      <if test="isbind != null" >
        IsBind,
      </if>
      <if test="deliverycompanyid != null" >
        DeliveryCompanyId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phoneno != null" >
        #{phoneno,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=NVARCHAR},
      </if>
      <if test="recommendphone != null" >
        #{recommendphone,jdbcType=NVARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="truename != null" >
        #{truename,jdbcType=NVARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=NVARCHAR},
      </if>
      <if test="picwithhandurl != null" >
        #{picwithhandurl,jdbcType=NVARCHAR},
      </if>
      <if test="picurl != null" >
        #{picurl,jdbcType=NVARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="accountbalance != null" >
        #{accountbalance,jdbcType=NUMERIC},
      </if>
      <if test="inserttime != null" >
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="invitecode != null" >
        #{invitecode,jdbcType=NVARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=NVARCHAR},
      </if>
      <if test="cityid != null" >
        #{cityid,jdbcType=NVARCHAR},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="healthcardid != null" >
        #{healthcardid,jdbcType=NCHAR},
      </if>
      <if test="internaldepart != null" >
        #{internaldepart,jdbcType=NVARCHAR},
      </if>
      <if test="provincecode != null" >
        #{provincecode,jdbcType=NVARCHAR},
      </if>
      <if test="areacode != null" >
        #{areacode,jdbcType=NVARCHAR},
      </if>
      <if test="citycode != null" >
        #{citycode,jdbcType=NVARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=NVARCHAR},
      </if>
      <if test="bussinessid != null" >
        #{bussinessid,jdbcType=INTEGER},
      </if>
      <if test="workstatus != null" >
        #{workstatus,jdbcType=INTEGER},
      </if>
      <if test="allowwithdrawprice != null" >
        #{allowwithdrawprice,jdbcType=DECIMAL},
      </if>
      <if test="haswithdrawprice != null" >
        #{haswithdrawprice,jdbcType=DECIMAL},
      </if>
      <if test="isbind != null" >
        #{isbind,jdbcType=SMALLINT},
      </if>
      <if test="deliverycompanyid != null" >
        #{deliverycompanyid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.edaisong.entity.Clienter" >
    update clienter
    <set >
      <if test="phoneno != null" >
        PhoneNo = #{phoneno,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        LoginName = #{loginname,jdbcType=NVARCHAR},
      </if>
      <if test="recommendphone != null" >
        recommendPhone = #{recommendphone,jdbcType=NVARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="truename != null" >
        TrueName = #{truename,jdbcType=NVARCHAR},
      </if>
      <if test="idcard != null" >
        IDCard = #{idcard,jdbcType=NVARCHAR},
      </if>
      <if test="picwithhandurl != null" >
        PicWithHandUrl = #{picwithhandurl,jdbcType=NVARCHAR},
      </if>
      <if test="picurl != null" >
        PicUrl = #{picurl,jdbcType=NVARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=TINYINT},
      </if>
      <if test="accountbalance != null" >
        AccountBalance = #{accountbalance,jdbcType=NUMERIC},
      </if>
      <if test="inserttime != null" >
        InsertTime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="invitecode != null" >
        InviteCode = #{invitecode,jdbcType=NVARCHAR},
      </if>
      <if test="city != null" >
        City = #{city,jdbcType=NVARCHAR},
      </if>
      <if test="cityid != null" >
        CityId = #{cityid,jdbcType=NVARCHAR},
      </if>
      <if test="groupid != null" >
        GroupId = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="healthcardid != null" >
        HealthCardID = #{healthcardid,jdbcType=NCHAR},
      </if>
      <if test="internaldepart != null" >
        InternalDepart = #{internaldepart,jdbcType=NVARCHAR},
      </if>
      <if test="provincecode != null" >
        ProvinceCode = #{provincecode,jdbcType=NVARCHAR},
      </if>
      <if test="areacode != null" >
        AreaCode = #{areacode,jdbcType=NVARCHAR},
      </if>
      <if test="citycode != null" >
        CityCode = #{citycode,jdbcType=NVARCHAR},
      </if>
      <if test="province != null" >
        Province = #{province,jdbcType=NVARCHAR},
      </if>
      <if test="bussinessid != null" >
        BussinessID = #{bussinessid,jdbcType=INTEGER},
      </if>
      <if test="workstatus != null" >
        WorkStatus = #{workstatus,jdbcType=INTEGER},
      </if>
      <if test="allowwithdrawprice != null" >
        AllowWithdrawPrice = #{allowwithdrawprice,jdbcType=DECIMAL},
      </if>
      <if test="haswithdrawprice != null" >
        HasWithdrawPrice = #{haswithdrawprice,jdbcType=DECIMAL},
      </if>
      <if test="isbind != null" >
        IsBind = #{isbind,jdbcType=SMALLINT},
      </if>
      <if test="deliverycompanyid != null" >
        DeliveryCompanyId = #{deliverycompanyid,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edaisong.entity.Clienter" >
    update clienter
    set PhoneNo = #{phoneno,jdbcType=VARCHAR},
      LoginName = #{loginname,jdbcType=NVARCHAR},
      recommendPhone = #{recommendphone,jdbcType=NVARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      TrueName = #{truename,jdbcType=NVARCHAR},
      IDCard = #{idcard,jdbcType=NVARCHAR},
      PicWithHandUrl = #{picwithhandurl,jdbcType=NVARCHAR},
      PicUrl = #{picurl,jdbcType=NVARCHAR},
      Status = #{status,jdbcType=TINYINT},
      AccountBalance = #{accountbalance,jdbcType=NUMERIC},
      InsertTime = #{inserttime,jdbcType=TIMESTAMP},
      InviteCode = #{invitecode,jdbcType=NVARCHAR},
      City = #{city,jdbcType=NVARCHAR},
      CityId = #{cityid,jdbcType=NVARCHAR},
      GroupId = #{groupid,jdbcType=INTEGER},
      HealthCardID = #{healthcardid,jdbcType=NCHAR},
      InternalDepart = #{internaldepart,jdbcType=NVARCHAR},
      ProvinceCode = #{provincecode,jdbcType=NVARCHAR},
      AreaCode = #{areacode,jdbcType=NVARCHAR},
      CityCode = #{citycode,jdbcType=NVARCHAR},
      Province = #{province,jdbcType=NVARCHAR},
      BussinessID = #{bussinessid,jdbcType=INTEGER},
      WorkStatus = #{workstatus,jdbcType=INTEGER},
      AllowWithdrawPrice = #{allowwithdrawprice,jdbcType=DECIMAL},
      HasWithdrawPrice = #{haswithdrawprice,jdbcType=DECIMAL},
      IsBind = #{isbind,jdbcType=SMALLINT},
      DeliveryCompanyId = #{deliverycompanyid,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateMoneyById" parameterType="com.edaisong.entity.req.ClienterOptionReq" >
update b
set    b.AccountBalance=ISNULL(b.AccountBalance, 0)+#{rechargeAmount,jdbcType=DECIMAL},
       b.AllowWithdrawPrice=ISNULL(b.AllowWithdrawPrice,0)+#{rechargeAmount,jdbcType=DECIMAL}
OUTPUT
  Inserted.Id,  #{rechargeAmount,jdbcType=DECIMAL},   Inserted.AccountBalance, #{recordType,jdbcType=SMALLINT}, #{optName,jdbcType=NVARCHAR},  #{withwardId,jdbcType=BIGINT}, #{remark,jdbcType=NVARCHAR}
INTO ClienterBalanceRecord
  ( [ClienterId],[Amount],[Balance],[RecordType],[Operator],[WithwardId]  ,[Remark])
from clienter b WITH ( ROWLOCK )
where b.Id=#{clienterId,jdbcType=INTEGER};
  </update>
</mapper>