<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edaisong.api.dal.dao.inter.IBusinessDao">
	<select id="getBusinessDetailByID" resultType="com.edaisong.entity.domain.BusinessDetailModel"
		parameterType="java.lang.Long">
		SELECT
		b.id ,
		b.name ,
		b.city ,
		b.district ,
		b.phoneno ,
		b.phoneno2 ,
		b.idcard ,
		b.[address] ,
		isnull(b.landline,'') as  landline,
		b.longitude ,
		b.latitude ,
		b.[status] ,
		b.inserttime ,
		b.districtid ,
		b.cityid ,
		b.provincecode ,
		b.citycode ,
		b.areacode ,
		b.province ,
		ISNULL(b.DistribSubsidy, 0.00) distribsubsidy ,
		b.businesscommission ,
		b.commissiontype ,
		b.commissionfixvalue ,
		b.businessgroupId ,
		b.balanceprice ,
		b.allowwithdrawprice ,
		b.haswithdrawprice ,
		b.checkpicurl ,
		b.businesslicensepic ,
		b.mealssettlemode ,
		isnull(b.groupid,0) as groupid ,
		b.originalbusiid ,
		bfa.trueName ,
		bfa.accountNo ,
		bfa.accountType ,
		bfa.openBank ,
		bfa.openSubBank ,
		g.groupName ,
		ISNULL(g.IsModifyBind, 0) isModifyBind ,
		ISNULL(b.OneKeyPubOrder, 0) onekeypuborder ,
		b.isallowoverdraft ,
		b.isemployertask ,
		ISNULL(b.RecommendPhone, '') AS recommendphone
		FROM business b WITH ( NOLOCK )
		LEFT JOIN BusinessFinanceAccount bfa WITH ( NOLOCK ) ON b.Id =
		bfa.BusinessId
		AND bfa.IsEnable = 1
		LEFT JOIN [group] g WITH ( NOLOCK ) ON g.Id = b.GroupId
		WHERE b.Id = #{businessID}
	</select>

	<update id="modifyBusiness" parameterType="com.edaisong.entity.domain.BusinessModifyModel">
		update business
		<set>
			<if test="name != null">
				name = #{name,jdbcType=NVARCHAR},
			</if>
			<if test="landline != null">
				landline = #{landline,jdbcType=NVARCHAR},
			</if>
			<if test="phoneno2 != null">
				phoneno2 = #{phoneno2,jdbcType=NVARCHAR},
			</if>
			<if test="distribsubsidy != null">
				distribsubsidy = #{distribsubsidy,jdbcType=NUMERIC},
			</if>
			<if test="cityid != null">
				cityid = #{cityid,jdbcType=NVARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=NVARCHAR},
			</if>
			<if test="district != null">
				district = #{district,jdbcType=NVARCHAR},
			</if>
			<if test="districtid != null">
				districtid = #{districtid,jdbcType=NVARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=NVARCHAR},
			</if>
			<if test="latitude != null">
				latitude = #{latitude,jdbcType=DOUBLE},
			</if>
			<if test="longitude != null">
				longitude = #{longitude,jdbcType=DOUBLE},
			</if>
			<if test="commissiontype != null">
				commissiontype = #{commissiontype,jdbcType=INTEGER},
			</if>
			<if test="businesscommission != null">
				businesscommission = #{businesscommission,jdbcType=DECIMAL},
			</if>
			<if test="commissionfixvalue != null">
				commissionfixvalue = #{commissionfixvalue,jdbcType=DECIMAL},
			</if>
			<if test="businessgroupid != null">
				businessgroupid = #{businessgroupid,jdbcType=INTEGER},
			</if>
			<if test="mealssettlemode != null">
				mealssettlemode = #{mealssettlemode,jdbcType=INTEGER},
			</if>
			<if test="groupid != null">
				groupid = #{groupid,jdbcType=INTEGER},
			</if>
			<if test="originalbusiid != null">
				originalbusiid = #{originalbusiid,jdbcType=INTEGER},
			</if>
			<if test="onekeypuborder != null">
				onekeypuborder = #{onekeypuborder,jdbcType=INTEGER},
			</if>
			<if test="isemployertask != null">
				isemployertask = #{isemployertask,jdbcType=SMALLINT},
			</if>
			<if test="isallowoverdraft != null">
				isallowoverdraft = #{isallowoverdraft,jdbcType=INTEGER},
			</if>
		</set>
		OUTPUT
                        Inserted.Id,
                        #{optId,jdbcType=NVARCHAR},
                        #{optName,jdbcType=NVARCHAR},
                        GETDATE(),
                        3,
                        #{remark,jdbcType=NVARCHAR}
                    INTO BusinessOptionLog
                        (BusinessId,
                        OptId,
                        OptName,
                        InsertTime,
                        Platform,
                        Remark)
		where Id = #{id,jdbcType=BIGINT}
	</update>

	<sql id="getBusinessListColums">
		b.Id ,
		isnull(b.name,'''') as name ,
		b.city ,
		b.district ,
		b.phoneno ,
		b.phoneno2 ,
		b.password ,
		b.checkPicUrl ,
		b.idcard ,
		isnull(b.address,'''') as address ,
		ISNULL(b.Latitude, 0) latitude ,
		ISNULL(b.Longitude, 0) longitude ,
		b.status ,
		b.inserttime ,
		b.districtId ,
		b.cityid ,
		b.groupid ,
		b.originalbusiid ,
		b.provincecode ,
		b.citycode ,
		b.areacode ,
		b.province ,
		b.commissiontypeid ,
		ISNULL(b.DistribSubsidy, 0.00) distribsubsidy ,
		b.businesscommission ,
		isnull(g.groupname,'''') as groupname ,
		b.commissiontype ,
		b.commissionFixvalue ,
		b.businessgroupid ,
		bg.Name businessgroupname ,
		ISNULL(b.MealsSettleMode, 0) mealssettlemode ,
		ISNULL(b.BalancePrice,0) balanceprice ,
		ISNULL(b.AllowWithdrawPrice, 0) allowwithdrawprice ,
		ISNULL(b.RecommendPhone, '''') AS recommendphone ,
	    b.LastLoginTime 
	</sql>

	<sql id="getBusinessListFrom">
		business b WITH (NOLOCK)
		LEFT JOIN dbo.[group] g WITH ( NOLOCK ) ON g.Id =
		b.GroupId
		JOIN dbo.[BusinessGroup] bg WITH ( NOLOCK ) ON
		b.BusinessGroupId =bg.Id
	</sql>

	<sql id="getBusinessListWhere">

		<!-- <trim prefix="WHERE" prefixOverrides="AND|OR"> -->
		1=1
		<if test="recommendPhone != null and recommendPhone!=''">
			and b.recommendPhone=''${recommendPhone}''
		</if>
		<if test="businessName != null and businessName!=''">
			and b.name=''${businessName}''
		</if>
		<if test="businessPhone != null and businessPhone!=''">
			and b.PhoneNo=''${businessPhone}''
		</if>
		<if test="status!=null and status!=-1">
			and b.status=${status}
		</if>
		<if test="mealsSettleMode!=null and mealsSettleMode!=-1">
			and ISNULL(b.mealsSettleMode,0)=${mealsSettleMode}
		</if>
		<if test="businessSettlementRatio!=null and businessSettlementRatio>0">
			and b.businessCommission=#{businessSettlementRatio}
		</if>
		<if test="groupId!=null and groupId!=0">
			and b.groupId=${groupId}
		</if>
		<if test="businessGroupId!=null and businessGroupId>0">
			and b.businessGroupId=${businessGroupId}
		</if>
		<if test="commissionType!=null and commissionType>0">
			and b.commissionType=${commissionType}
		</if>
		<if test="businessCity != null and businessCity!=''">
			and b.city=''${businessCity}''
		</if>
		<if test="authorityCityNameList != null">
			and b.city in
			<foreach item="item" index="index" collection="authorityCityNameList"
				open="(''" separator="'',''" close="'')">
				#{item}
			</foreach>
		</if>
		<!-- </trim> -->
	</sql>

	<select id="getBusinessList" resultType="com.edaisong.entity.domain.BusinessModel"
		parameterType="com.edaisong.entity.req.PagedBusinessReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' b.Id DESC ',
		'
		<include refid="getBusinessListColums" />
		',
		'
		<include refid="getBusinessListFrom" />
		',
		'
		<include refid="getBusinessListWhere" />
		',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER}
		,1,
		#{totalRecord,mode=OUT,jdbcType=INTEGER},
		#{totalPage,mode=OUT,jdbcType=INTEGER}
		)}
	</select>
	<select id="getOpLogByBusinessID" resultType="com.edaisong.entity.BusinessOptionLog"
		parameterType="java.lang.Long">
		SELECT optname ,
		inserttime ,
		remark
		FROM dbo.BusinessOptionLog(NOLOCK)
		WHERE BusinessId = #{businessID}
		ORDER BY Id DESC
	</select>

	<select id="getBusinessByPhoneNoAndPwd" resultType="com.edaisong.entity.Business"
		parameterType="java.util.Map">
		SELECT
		b.id ,
		b.name ,
		b.city ,
		b.district ,
		b.phoneno ,
		b.phoneno2 ,
		b.idcard ,
		b.[address] ,
		isnull(b.landline,'') as  landline,
		b.longitude ,
		b.latitude ,
		b.[status] ,
		b.inserttime ,
		b.districtid ,
		b.cityid ,
		b.provincecode ,
		b.citycode ,
		b.areacode ,
		b.province ,
		ISNULL(b.DistribSubsidy, 0.00) distribsubsidy ,
		b.businesscommission ,
		b.commissiontype ,
		b.commissionfixvalue ,
		b.businessgroupId ,
		b.balanceprice ,
		b.allowwithdrawprice ,
		b.haswithdrawprice ,
		b.checkpicurl ,
		b.businesslicensepic ,
		b.mealssettlemode ,
		isnull(b.groupid,0) as groupid ,
		b.originalbusiid ,
		ISNULL(g.IsModifyBind, 0) isModifyBind ,
		ISNULL(b.OneKeyPubOrder, 0) onekeypuborder ,
		b.isallowoverdraft ,
		b.isemployertask ,
		ISNULL(b.RecommendPhone, '') AS recommendphone
		FROM business b WITH ( NOLOCK )
		WHERE b.PhoneNo = #{PhoneNo,jdbcType=NVARCHAR}
		AND Password = #{Password,jdbcType=NVARCHAR} 
	</select>
	
	<insert id="addLogingLog" parameterType="com.edaisong.entity.BusinessLoginLog">
		insert into BusinessLoginLog([PhoneNo],[Description],[IsSuccess])
		values(#{PhoneNo,jdbcType=NVARCHAR},#{Description,jdbcType=NVARCHAR},#{IsSuccess,jdbcType=SMALLINT})
		<selectKey resultType="java.lang.Long">
			select @@identity as id
		</selectKey>
	</insert>
	<select id="getBusinessById" resultType="com.edaisong.entity.Business" parameterType="java.lang.Integer" statementType="CALLABLE">
	  select 
	  <include refid="getBusinessListColums" /> 
	  from dbo.business b WITH (NOLOCK) where b.Id = #{businessId,jdbcType=INTEGER} 
	</select>

   <!-- 更新 商户 余额，可提现余额   add by caoheyang 20150804  -->	
	<update id="updateForWithdraw" parameterType="java.util.Map">
		update  business
		set  BalancePrice=BalancePrice+ #{Money,jdbcType=DECIMAL} ,AllowWithdrawPrice=AllowWithdrawPrice+#{Money,jdbcType=DECIMAL}
		where  Id=#{Id,jdbcType=INTEGER}
	</update>
</mapper>