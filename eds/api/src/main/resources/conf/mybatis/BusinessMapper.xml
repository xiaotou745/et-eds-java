<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edaisong.api.dao.inter.IBusinessDao">
	<select id="getBusinessDetailByID" resultType="com.edaisong.entity.domain.BusinessDetailModel"
		parameterType="java.lang.Long">
		SELECT
		b.id ,
		b.name ,
		b.city ,
		b.district ,
		b.phoneno ,
		b.phoneno2 ,
		b.idcard ,
		b.[address] ,
		isnull(b.landline,'') as landline,
		b.longitude ,
		b.latitude ,
		b.[status] ,
		b.inserttime ,
		b.districtid ,
		b.cityid ,
		b.provincecode ,
		b.citycode ,
		b.areacode ,
		b.province ,
		ISNULL(b.DistribSubsidy, 0.00) distribsubsidy ,
		b.businesscommission ,
		b.commissiontype ,
		b.commissionfixvalue ,
		b.businessgroupId ,
		b.balanceprice ,
		b.allowwithdrawprice ,
		b.haswithdrawprice ,
		b.checkpicurl ,
		b.businesslicensepic ,
		b.mealssettlemode ,
		isnull(b.groupid,0) as groupid ,
		b.originalbusiid ,
		b.isOrderChecked,
		b.isAllowCashPay,
		bfa.trueName ,
		bfa.accountNo ,
		bfa.accountType ,
		bfa.openBank ,
		bfa.openSubBank ,
		g.groupName ,
		ISNULL(g.IsModifyBind, 0)
		isModifyBind ,
		ISNULL(b.OneKeyPubOrder, 0) onekeypuborder ,
		b.isallowoverdraft ,
		b.isemployertask ,
		ISNULL(b.RecommendPhone, '') AS
		recommendphone,
		b.PushOrderType
		FROM business b WITH ( NOLOCK )
		LEFT JOIN
		BusinessFinanceAccount bfa WITH ( NOLOCK ) ON b.Id =
		bfa.BusinessId
		AND
		bfa.IsEnable = 1
		LEFT JOIN [group] g WITH ( NOLOCK ) ON g.Id =
		b.GroupId
		WHERE b.Id = #{businessID}
	</select>
	<!-- 获取商户、集团、策略 2015年8月11日 17:48:47 胡灵波 -->
	<select id="getBusiness" resultType="com.edaisong.entity.domain.BusinessModel"
		parameterType="java.lang.Long">
				SELECT TOP 1
		        b.id ,
		        b.name ,
		        b.city ,
		        b.district ,
		        b.phoneno ,
		        b.phoneno2 ,
		        b.idcard ,
		        b.[address] ,
		        ISNULL(b.landline, '') AS landline ,
		        b.longitude ,
		        b.latitude ,
		        b.[status] ,
		        b.inserttime ,
		        b.districtid ,
		        b.cityid ,
		        b.provincecode ,
		        b.citycode ,
		        b.areacode ,
		        b.province ,
		        ISNULL(b.DistribSubsidy, 0.00) distribsubsidy ,
		        b.businesscommission ,
		        b.commissiontype ,
		        b.commissionfixvalue ,
		        b.businessgroupId ,
		        b.balanceprice ,
		        b.allowwithdrawprice ,
		        b.haswithdrawprice ,
		        b.checkpicurl ,
		        b.businesslicensepic ,
		        b.mealssettlemode ,
		        ISNULL(b.groupid, 0) AS groupid ,
		        b.originalbusiid ,
		        ISNULL(b.OneKeyPubOrder, 0) onekeypuborder ,
		        b.isallowoverdraft ,
		        b.isemployertask ,
		        b.isAllowCashPay ,
		        ISNULL(b.RecommendPhone, '') AS recommendphone ,
		        bg.StrategyId AS StrategyId ,
		        b.IsOrderChecked ,
		        ISNULL(g.groupid, 0) AS groupBusinessID,
		        b.pushOrderType
		FROM    business b WITH ( NOLOCK )
		        LEFT JOIN dbo.[BusinessGroup] bg WITH ( NOLOCK ) ON b.BusinessGroupId = bg.Id
		        LEFT JOIN GroupBusinessRelation g WITH ( NOLOCK ) ON b.id = g.businessid AND g.IsBind=1 AND g.IsEnable=1
		WHERE   b.Id = #{businessID}
	</select>

	<update id="modifyBusiness" parameterType="com.edaisong.entity.domain.BusinessModifyModel">
		update business
		<set>
			<if test="name != null">
				name = #{name,jdbcType=NVARCHAR},
			</if>
			<if test="recommendphone != null">
				recommendphone = #{recommendphone,jdbcType=NVARCHAR},
			</if>
			<if test="pushOrderType != null">
				PushOrderType = #{pushOrderType,jdbcType=INTEGER},
			</if>
			<if test="landline != null">
				landline = #{landline,jdbcType=NVARCHAR},
			</if>
			<if test="phoneno2 != null">
				phoneno2 = #{phoneno2,jdbcType=NVARCHAR},
			</if>
			<if test="distribsubsidy != null">
				distribsubsidy = #{distribsubsidy,jdbcType=NUMERIC},
			</if>
			<if test="cityid != null">
				cityid = #{cityid,jdbcType=NVARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=NVARCHAR},
			</if>
			<if test="district != null">
				district = #{district,jdbcType=NVARCHAR},
			</if>
			<if test="districtid != null">
				districtid = #{districtid,jdbcType=NVARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=NVARCHAR},
			</if>
			<if test="latitude != null">
				latitude = #{latitude,jdbcType=DOUBLE},
			</if>
			<if test="longitude != null">
				longitude = #{longitude,jdbcType=DOUBLE},
			</if>
			<if test="commissiontype != null">
				commissiontype = #{commissiontype,jdbcType=INTEGER},
			</if>
			<if test="businesscommission != null">
				businesscommission =
				#{businesscommission,jdbcType=DECIMAL},
			</if>
			<if test="commissionfixvalue != null">
				commissionfixvalue =
				#{commissionfixvalue,jdbcType=DECIMAL},
			</if>
			<if test="businessgroupid != null">
				businessgroupid = #{businessgroupid,jdbcType=INTEGER},
			</if>
			<if test="mealssettlemode != null">
				mealssettlemode = #{mealssettlemode,jdbcType=INTEGER},
			</if>
			<if test="groupid != null">
				groupid = #{groupid,jdbcType=INTEGER},
			</if>
			<if test="originalbusiid != null">
				originalbusiid = #{originalbusiid,jdbcType=INTEGER},
			</if>
			<if test="onekeypuborder != null">
				onekeypuborder = #{onekeypuborder,jdbcType=INTEGER},
			</if>
			<if test="isemployertask != null">
				isemployertask = #{isemployertask,jdbcType=SMALLINT},
			</if>
			<if test="isallowoverdraft != null">
				isallowoverdraft = #{isallowoverdraft,jdbcType=INTEGER},
			</if>
			<if test="isOrderChecked != null">
				IsOrderChecked = #{isOrderChecked,jdbcType=INTEGER},
			</if>
			<if test="isAllowCashPay != null">
				isAllowCashPay = #{isAllowCashPay,jdbcType=INTEGER},
			</if>
		</set>
		OUTPUT
		Inserted.Id,
		#{optId,jdbcType=NVARCHAR},
		#{optName,jdbcType=NVARCHAR},
		GETDATE(),
		3,
		#{remark,jdbcType=NVARCHAR}
		INTO BusinessOptionLog
		(BusinessId,
		OptId,
		OptName,
		InsertTime,
		Platform,
		Remark)
		where Id = #{id,jdbcType=BIGINT}
	</update>

	<sql id="getBusinessListColums">
		b.Id ,
		isnull(b.name,'''') as name ,
		b.city ,
		b.district ,
		b.phoneno ,
		b.phoneno2 ,
		b.password ,
		b.checkPicUrl ,
		b.idcard ,
		isnull(b.address,'''') as address ,
		ISNULL(b.Latitude, 0) latitude ,
		ISNULL(b.Longitude, 0) longitude ,
		b.status ,
		b.inserttime ,
		b.districtId ,
		b.cityid ,
		b.groupid ,
		b.originalbusiid ,
		b.provincecode ,
		b.citycode ,
		b.areacode ,
		b.province ,
		b.commissiontypeid ,
		ISNULL(b.DistribSubsidy, 0.00) distribsubsidy ,
		b.businesscommission ,
		isnull(g.groupname,'''') as groupname ,
		b.commissiontype ,
		b.commissionFixvalue ,
		b.businessgroupid ,
		bg.Name businessgroupname ,
		ISNULL(b.MealsSettleMode, 0) mealssettlemode ,
		ISNULL(b.BalancePrice,0) balanceprice ,
		ISNULL(b.AllowWithdrawPrice, 0)
		allowwithdrawprice ,
		ISNULL(b.RecommendPhone, '''') AS recommendphone ,
		b.LastLoginTime,
		b.isAllowCashPay
	</sql>

	<sql id="getBusinessListFrom">
		business b WITH (NOLOCK)
		LEFT JOIN dbo.[group] g WITH (
		NOLOCK ) ON g.Id =
		b.GroupId
		JOIN dbo.[BusinessGroup] bg WITH ( NOLOCK )
		ON
		b.BusinessGroupId =bg.Id
	</sql>

	<sql id="getBusinessListWhere">

		<!-- <trim prefix="WHERE" prefixOverrides="AND|OR"> -->
		1=1
		<if test="recommendPhone != null and recommendPhone!=''">
			and b.recommendPhone=''${recommendPhone}''
		</if>
		<if test="businessName != null and businessName!=''">
			and b.name like ''%${businessName}%''
		</if>
		<if test="businessPhone != null and businessPhone!=''">
			and b.PhoneNo=''${businessPhone}''
		</if>
		<if test="status!=null and status!=-1">
			and b.status=${status}
		</if>
		<if test="mealsSettleMode!=null and mealsSettleMode!=-1">
			and ISNULL(b.mealsSettleMode,0)=${mealsSettleMode}
		</if>
		<if test="businessSettlementRatio!=null and businessSettlementRatio>0">
			and b.businessCommission=#{businessSettlementRatio}
		</if>
		<if test="groupId!=null and groupId!=0">
			and b.groupId=${groupId}
		</if>
		<if test="businessGroupId!=null and businessGroupId>0">
			and b.businessGroupId=${businessGroupId}
		</if>
		<if test="commissionType!=null and commissionType>0">
			and b.commissionType=${commissionType}
		</if>
		<if test="businessCity != null and businessCity!='' and businessCity!=-1">
			and b.city=''${businessCity}''
		</if>
		<if test="authorityCityNameList != null">
			and b.city in
			<foreach item="item" index="index" collection="authorityCityNameList"
				open="(''" separator="'',''" close="'')">
				#{item}
			</foreach>
		</if>
		<!-- </trim> -->
	</sql>

	<select id="getBusinessList" resultType="com.edaisong.entity.domain.BusinessModel"
		parameterType="com.edaisong.entity.req.PagedBusinessReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' b.Id DESC ',
		'
		<include refid="getBusinessListColums" />
		',
		'
		<include refid="getBusinessListFrom" />
		',
		'
		<include refid="getBusinessListWhere" />
		',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER}
		,1,
		#{totalRecord,mode=OUT,jdbcType=INTEGER},
		#{totalPage,mode=OUT,jdbcType=INTEGER}
		)}
	</select> 
	<select id="getOpLogByBusinessID" resultType="com.edaisong.entity.BusinessOptionLog"
		parameterType="java.lang.Long">
		SELECT optname ,
		inserttime ,
		remark
		FROM
		dbo.BusinessOptionLog(NOLOCK)
		WHERE BusinessId = #{businessID}
		ORDER BY
		Id DESC
	</select>

	<select id="getBusinessByPhoneNoAndPwd" resultType="com.edaisong.entity.Business"
		parameterType="java.util.Map">
		SELECT top 1 
		b.id ,
		b.name ,
		b.city ,
		b.district ,
		b.phoneno ,
		b.phoneno2 ,
		b.idcard ,
		b.[address] ,
		isnull(b.landline,'') as landline,
		b.longitude ,
		b.latitude ,
		b.[status] ,
		b.inserttime ,
		b.districtid ,
		b.cityid ,
		b.provincecode ,
		b.citycode ,
		b.areacode ,
		b.province ,
		ISNULL(b.DistribSubsidy, 0.00) distribsubsidy ,
		b.businesscommission ,
		b.commissiontype ,
		b.commissionfixvalue ,
		b.businessgroupId ,
		b.balanceprice ,
		b.allowwithdrawprice ,
		b.haswithdrawprice ,
		b.checkpicurl ,
		b.businesslicensepic ,
		b.mealssettlemode ,
		isnull(b.groupid,0) as groupid ,
		b.originalbusiid ,
		ISNULL(b.OneKeyPubOrder, 0) onekeypuborder ,
		b.isallowoverdraft ,
		b.isemployertask ,
		ISNULL(b.RecommendPhone, '') AS recommendphone
		FROM
		business b WITH ( NOLOCK )
		WHERE b.PhoneNo =
		#{phoneNo,jdbcType=NVARCHAR}
		AND Password =
		#{password,jdbcType=NVARCHAR}
	</select>

	<insert id="addLogingLog" parameterType="com.edaisong.entity.BusinessLoginLog"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		BusinessLoginLog([PhoneNo],[Description],[IsSuccess])
		values(#{phoneNo,jdbcType=NVARCHAR},#{description,jdbcType=NVARCHAR},#{isSuccess,jdbcType=SMALLINT})
	</insert>
	<select id="getById" resultType="com.edaisong.entity.Business"
		parameterType="java.lang.Integer" statementType="CALLABLE">
		select
		b.*
		from dbo.business b WITH (NOLOCK) where b.Id =
		#{businessId,jdbcType=INTEGER}
	</select>

	<!-- 更新 商户 余额，可提现余额 add by caoheyang 20150804 -->
	<update id="updateForWithdraw" parameterType="java.util.Map">
		update business
		set
		BalancePrice=BalancePrice+ #{Money,jdbcType=DECIMAL}
		,AllowWithdrawPrice=AllowWithdrawPrice+ #{Money,jdbcType=DECIMAL}
		where Id= #{Id,jdbcType=INTEGER}
	</update>
	<update id="modifyExpress" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item">
			MERGE INTO BusinessExpressRelation ber
			USING ( VALUES
			( #{item.businessid,jdbcType=INTEGER} ,
			#{item.expressid,jdbcType=INTEGER}
			) ) AS berNew ( BusinessId, ExpressId )
			ON ber.BusinessId = berNew.BusinessId
			AND ber.ExpressId = berNew.ExpressId
			WHEN MATCHED
			THEN UPDATE
			SET ber.IsEnable = #{item.isenable,jdbcType=SMALLINT} ,
			ber.UpdateBy = #{item.updateby,jdbcType=NVARCHAR} ,
			ber.UpdateTime = GETDATE()
			WHEN NOT MATCHED
			THEN INSERT (
			BusinessId ,
			ExpressId ,
			CreateBy ,
			UpdateBy ,
			IsEnable
			)
			VALUES ( #{item.businessid,jdbcType=INTEGER} ,
			#{item.expressid,jdbcType=INTEGER} ,
			#{item.createby,jdbcType=NVARCHAR} ,
			#{item.updateby,jdbcType=NVARCHAR} ,
			#{item.isenable,jdbcType=SMALLINT}
			);
		</foreach>
	</update>
	<!-- 更新 商户 余额，可提现余额 add by zhaohailong 20150811 -->
	<update id="updateAuditStatus" parameterType="java.util.Map">
		update business set Status=#{status,jdbcType=INTEGER}
		where Id=
		#{businessID,jdbcType=INTEGER}
	</update>

	<!-- 更新 商户 最后登录时间 add by pengyi 20150818 -->
	<update id="updateLastLoginTime" parameterType="java.util.Map">
		update business set LastLoginTime=#{lastLoginTime,jdbcType=TIMESTAMP}
		where
		Id= #{businessID,jdbcType=INTEGER}
	</update>

	<select id="getRechargeDetail"
		resultType="com.edaisong.entity.domain.BusinessRechargeDetailModel"
		parameterType="java.lang.String">
		SELECT b.BusinessId ,
		a.Name ,
		c.PayTime ,
		b.Amount ,
		b.Balance ,
		c.OrderNo ,
		c.PayType ,
		c.PayStatus
		FROM dbo.business a ( NOLOCK )
		JOIN BusinessBalanceRecord b ( NOLOCK ) ON a.id = b.BusinessId
		JOIN BusinessRecharge c ( NOLOCK ) ON a.id = c.BusinessId AND
		b.RelationNo=c.OrderNo
		WHERE c.OrderNo=#{orderNo,jdbcType=VARCHAR}
	</select>

	<!-- 更新商户是否绑定骑士 add by pengyi 20150901 -->
	<update id="updateBusinessIsBind" parameterType="java.util.Map">
		update business
		set IsBind = #{isBind,jdbcType=INTEGER} where Id =
		#{businessId,jdbcType=INTEGER};
	</update>

	<!-- 获取商家是否需要录入金额才可以发单 0 需要 1 不需要  默认0 20151030 caoheyang-->
	<select id="getUserStatus" resultType="com.edaisong.entity.domain.BusinessStatus"
		parameterType="java.lang.Long">
		select Id as userid,[status] as
		status,OneKeyPubOrder,IsAllowOverdraft,BalancePrice,IsAllowCashPay
		from dbo.business with(nolock) WHERE id=#{userid,jdbcType=INTEGER}
	</select>
	<select id="getOrderCountInfoByBusinessId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
	SELECT ISNULL(Sum(WaitingCount),0) FROM dbo.OrderRegion where Status=1 and BusinessId=#{businessId,jdbcType=INTEGER}
	</select>
	<select id="getStrategyIdByGroupId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
	SELECT StrategyId FROM BusinessGroup nolock WHERE id=#{groupId,jdbcType=INTEGER}
	</select>
  	<!-- 获取门店发单模式   add by caoheyang 20151104-->
	<select id="getPushOrderType" resultType="java.lang.Integer"
		parameterType="java.lang.Long">
	  SELECT PushOrderType FROM dbo.business(nolock) where Id=#{businessId}
	</select>
	
	
  	<!--  骑士端获取店内任务  获取当前骑士的所有含有未接单订单的 雇主信息    add by caoheyang 20151102-->
	<select id="getInStoreTaskStroes" resultType="com.edaisong.entity.domain.InStoreTask"
		parameterType="com.edaisong.entity.req.InStoreTaskReq">
 declare @cliernterPoint geography ;
select @cliernterPoint=geography::Point(#{latitude},#{longitude},4326) ;
select  b.id as BusinessId,  
b.name as BusinessName,b.address as BusinessAddress
,round(geography::Point(ISNULL(b.Latitude,0),ISNULL(b.Longitude,0),4326).STDistance(@cliernterPoint),0) as DistanceToBusiness,
WaitingCounts, b.Longitude businessLongitude,b.Latitude businessLatitude,b.City businessCityName 
from    BusinessClienterRelation a (nolock)
join dbo.business b (nolock) on a.BusinessId = b.Id  and  a.ClienterId=#{clienterId,jdbcType=INTEGER} 
join (select ISNULL(SUM(WaitingCount),0) as  WaitingCounts,BusinessId from OrderRegion (nolock) where Status=1 group by BusinessId ) c on a.BusinessId=c.BusinessId
and c.WaitingCounts>0
where   a.IsEnable = 1
and a.IsBind = 1
and a.AuditStatus=1
order by c.WaitingCounts desc  
	</select>
	<!-- 骑士绑定商户 建立关系 wangchao-->
	<insert id="bindClienterBusiness" parameterType="com.edaisong.entity.domain.BindClienterBusiness">
		insert  into dbo.BusinessClienterRelation
		        ( BusinessId, ClienterId, CreateBy,IsBind )
		values  ( #{businessId,jdbcType=INTEGER},  
		          #{clienterId,jdbcType=INTEGER},  
		          #{businessName,jdbcType=NVARCHAR},0
		          );
		insert into dbo.ClienterBindOptionLog
		        ( BusinessId ,
		          ClienterId ,
		          OptId ,
		          OptName , 
		          Remark
		        )
		values  ( #{businessId,jdbcType=INTEGER} ,  
		          #{clienterId,jdbcType=INTEGER} ,  
		          #{businessId,jdbcType=INTEGER} ,  
		          #{businessName,jdbcType=NVARCHAR} , 
		          '添加绑定'
		        );
	</insert> 
	<!-- 查询骑士商户是否已经绑定 wangchao -->
	<select id="getClienterBind" resultType="com.edaisong.entity.BusinessClienterRelation"
		parameterType="com.edaisong.entity.domain.BindClienterBusiness">
	SELECT top 1 Id ,
       BusinessId ,
       ClienterId ,
       IsEnable ,
       CreateBy ,
       CreateTime ,
       UpdateBy ,
       UpdateTime ,
       IsBind ,
       AuditStatus FROM dbo.BusinessClienterRelation (nolock)
where BusinessId = #{businessId,jdbcType=INTEGER} and ClienterId = #{clienterId,jdbcType=INTEGER} 
order by Id desc
	</select>
   <sql id="getMyOrdeBListWhere">
  		1=1 and og.BusinessId = ${businessId}  and og.[Status] = ${status}
  		and (og.OrderRegionTwoId=${regionId} or  og.OrderRegionOneId=${regionId} )
  </sql>
     <sql id="getMyOrdeBListColumns">
  		 c.TrueName ClienterName, 
			og.ClienterId,
			c.PhoneNo ClienterPhoneNo, 
			CONVERT(varchar(100),og.GrabTime,20) GrabTime,
            CONVERT(varchar(100),og.PickUpTime,20) PickUpTime,
            CONVERT(varchar(100),og.ActualDoneDate,20) ActualDoneDate ,
			og.OrderRegionOneName,
			og.OrderRegionTwoName,
			og.Status,
			c.HeadPhoto ClienterHeadPhoto, 
			og.OrderCount,
			og.Id GrabOrderId 
  </sql>
   <sql id="getMyOrdeBListFrom">
  		  dbo.OrderGrab og ( nolock ) join dbo.clienter c ( nolock ) on og.ClienterId = c.Id
  </sql>
  <!-- 获取商户端 取货中 配送中 已完成 任务  wangchao-->
	<select id="getMyOrdeB" resultType="com.edaisong.entity.domain.OrderRespModel" parameterType="com.edaisong.entity.req.MyOrderBReq" statementType="CALLABLE">	
	{call Sp_CustomPage2015_V1(
		'og.GrabTime asc',
		'<include refid="getMyOrdeBListColumns" />',
		'<include refid="getMyOrdeBListFrom" />',
		'<include refid="getMyOrdeBListWhere" />', 
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER}
		,1,
		#{totalRecord,mode=OUT,jdbcType=INTEGER},
		#{totalPage,mode=OUT,jdbcType=INTEGER}
		)}
  </select>
  <select id="getOrderCountTotal" resultType="com.edaisong.entity.resp.MyOrderBResp"
		parameterType="com.edaisong.entity.req.MyOrderBReq">
		SELECT  
			isnull(sum(case when og.Status =  2 then og.OrderCount else 0 end),0) quHuoOrderCountTotal,
			isnull(sum(case when og.Status =  4 then og.OrderCount else 0 end),0) peiSongOrderCountTotal,
			isnull(sum(case when og.Status =  1 then og.OrderCount else 0 end),0) yiWanChenOrderCountTotal
			from 
			dbo.OrderGrab og(nolock)
          where og.BusinessId = #{businessId,jdbcType=INTEGER} 
          and (og.OrderRegionTwoId=${regionId} or og.OrderRegionOneId=${regionId} )
	</select> 
	<select id="getMyOrderDetailB" resultType="com.edaisong.entity.resp.MyOrderDetailBResp"
		parameterType="com.edaisong.entity.req.OrderDetailBReq">
	select  c.TrueName ClienterName ,
        og.ClienterId ,
        c.PhoneNo ClienterPhoneNo , 
        CONVERT(varchar(100),og.GrabTime,20) GrabTime,
        CONVERT(varchar(100),og.PickUpTime,20) PickUpTime,
        CONVERT(varchar(100),og.ActualDoneDate,20) ActualDoneDate ,
        og.OrderRegionOneName ,
        og.OrderRegionTwoName ,
        og.[Status] , 
        og.OrderCount,og.Id GrabOrderId
from    dbo.OrderGrab og ( nolock )
        join dbo.clienter c ( nolock ) on og.ClienterId = c.Id
where   og.Id = #{grabOrderId,jdbcType=INTEGER} 
	</select> 
	
	<!-- 获取商户基础信息 wangchao 扫一扫时候调用 -->
	<select id="getBusinessInfo" resultType="com.edaisong.entity.domain.BusinessBasicInfoModel"
		parameterType="com.edaisong.entity.req.BusinessReq">
select top 1 b.Id BusinessId,b.Name BusinessName,b.PhoneNo BusinessPhoneNo,b.Address BusinessAddress,ISNULL(bcr.IsBind,0) IsBind,ISNULL(bcr.AuditStatus,0) AuditStatus FROM dbo.business b(nolock)
	 	left join dbo.BusinessClienterRelation bcr (nolock) on b.Id = bcr.BusinessId
where (b.Id = #{businessId,jdbcType=INTEGER} and bcr.ClienterId = #{clienterId,jdbcType=INTEGER}) or (b.id = #{businessId,jdbcType=INTEGER})
order by bcr.Id desc
	</select> 
	<!-- 商户是否已注册 add by caoheyang 20151110 -->
   <select id="isExist" resultType="java.lang.Integer"
		parameterType="java.lang.String">
select  count(1) 
from  dbo.[business]  
where   phoneNo= #{phone}  and GroupId=0
	</select> 
	<!-- 门店修改绑定手机号 addby caoheyang 20151110 -->
	<update id="businessModiyPhone" parameterType="com.edaisong.entity.req.BCheckCodeReq">
	 declare @oldPhone VARCHAR(20);
     select @oldPhone=PhoneNo from dbo.business where Id=#{businessId,jdbcType=BIGINT};
		update business SET PhoneNo=#{phoneNo,jdbcType=NVARCHAR}
		OUTPUT
		Inserted.Id,
		Inserted.Id,
		Inserted.Name,
		GETDATE(),
		0,
		'商家将手机账号由'+@oldPhone+'改为'+'${phoneNo}'
		INTO BusinessOptionLog
		(BusinessId,
		OptId,
		OptName,
		InsertTime,
		Platform,
		Remark)
		where Id = #{businessId,jdbcType=BIGINT}
	</update>
	
</mapper>