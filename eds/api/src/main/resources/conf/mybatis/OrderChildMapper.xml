<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edaisong.api.dao.inter.IOrderChildDao">
  <sql id="Base_Column_List" >
	id, orderid, childid, totalprice, goodprice,
	deliveryprice, paystyle, paytype,   paystatus, payby,
 paytime, payprice,  hasuploadticket,   ticketurl,createby,
 createtime, updateby, updatetime,   originalorderno, wxcodeurl,
   thirdpaystatus,  status,   orderCommission,  settleMoney,orderRegionOneId,
 orderRegionTwoId,CommissionRate,BaseCommission,WebsiteSubsidy,Adjustment,DistribSubsidy,businessId
  </sql>
	<insert id="insert" parameterType="com.edaisong.entity.OrderChild"
		useGeneratedKeys="true" keyProperty="id">
		insert into OrderChild (OrderId,
		ChildId,
		TotalPrice, GoodPrice, DeliveryPrice,
		PayStyle, PayType,
		PayStatus,
		PayBy, PayTime, PayPrice,
		HasUploadTicket, TicketUrl,
		CreateBy,
		CreateTime, UpdateBy, UpdateTime,
		OriginalOrderNo, WxCodeUrl,
		ThirdPayStatus
		)
		values (#{orderid,jdbcType=INTEGER},
		#{childid,jdbcType=INTEGER},
		#{totalprice,jdbcType=DECIMAL},
		#{goodprice,jdbcType=DECIMAL}, #{deliveryprice,jdbcType=DECIMAL},
		#{paystyle,jdbcType=SMALLINT}, #{paytype,jdbcType=SMALLINT},
		#{paystatus,jdbcType=SMALLINT},
		#{payby,jdbcType=NVARCHAR},
		#{paytime,jdbcType=TIMESTAMP}, #{payprice,jdbcType=DECIMAL},
		#{hasuploadticket,jdbcType=BIT}, #{ticketurl,jdbcType=VARCHAR},
		#{createby,jdbcType=NVARCHAR},
		#{createtime,jdbcType=TIMESTAMP},
		#{updateby,jdbcType=NVARCHAR}, #{updatetime,jdbcType=TIMESTAMP},
		#{originalorderno,jdbcType=VARCHAR}, #{wxcodeurl,jdbcType=VARCHAR},
		#{thirdpaystatus,jdbcType=SMALLINT}
		)
	</insert>
	<update id="insertList" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" >
			insert into OrderChild (OrderId, businessId,ChildId,
			TotalPrice, GoodPrice, DeliveryPrice,
			PayStyle, PayType, PayStatus,
			PayBy, PayTime, PayPrice,
			HasUploadTicket, TicketUrl, CreateBy,
			CreateTime, UpdateBy, UpdateTime,
			OriginalOrderNo, WxCodeUrl, ThirdPayStatus,
			Status,OrderRegionOneId,OrderRegionTwoId,
			OrderCommission,SettleMoney,CommissionRate,
			BaseCommission,WebsiteSubsidy,Adjustment,Platform
			) values (
			#{item.orderid,jdbcType=INTEGER},
			#{item.businessid,jdbcType=INTEGER},
			#{item.childid,jdbcType=INTEGER},
			#{item.totalprice,jdbcType=DECIMAL},
			#{item.goodprice,jdbcType=DECIMAL},
			#{item.deliveryprice,jdbcType=DECIMAL},
			#{item.paystyle,jdbcType=SMALLINT},
			#{item.paytype,jdbcType=SMALLINT},
			#{item.paystatus,jdbcType=SMALLINT},
			#{item.payby,jdbcType=NVARCHAR},
			#{item.paytime,jdbcType=TIMESTAMP},
			#{item.payprice,jdbcType=DECIMAL},
			#{item.hasuploadticket,jdbcType=BIT},
			#{item.ticketurl,jdbcType=VARCHAR},
			#{item.createby,jdbcType=NVARCHAR},
			getdate(),
			#{item.updateby,jdbcType=NVARCHAR},
			getdate(),
			#{item.originalorderno,jdbcType=VARCHAR},
			#{item.wxcodeurl,jdbcType=VARCHAR},
			#{item.thirdpaystatus,jdbcType=SMALLINT},
			#{item.status,jdbcType=SMALLINT},
			#{item.orderRegionOneId,jdbcType=INTEGER},
			#{item.orderRegionTwoId,jdbcType=INTEGER},
			#{item.orderCommission,jdbcType=DECIMAL},
			#{item.settleMoney,jdbcType=DECIMAL},
			#{item.commissionRate,jdbcType=DECIMAL},
			#{item.baseCommission,jdbcType=DECIMAL},
			#{item.websiteSubsidy,jdbcType=DECIMAL},
			#{item.adjustment,jdbcType=DECIMAL},
			#{item.platform,jdbcType=INTEGER}
			);
		</foreach>
	</update>
	<update id="updateList" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" >
		update OrderChild set Status=#{item.status,jdbcType=SMALLINT},
		UpdateBy=#{item.updateby,jdbcType=NVARCHAR},
		UpdateTime=getdate()
		where id=#{item.id,jdbcType=INTEGER}			
		</foreach>
	</update>
	 <update id="updateByPrimaryKeySelective" parameterType="com.edaisong.entity.OrderChild" >
    update OrderChild
    <set >
      <if test="orderid != null" >
        OrderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="businessid != null" >
        businessId = #{businessid,jdbcType=INTEGER},
      </if>
      <if test="childid != null" >
        ChildId = #{childid,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null" >
        TotalPrice = #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="goodprice != null" >
        GoodPrice = #{goodprice,jdbcType=DECIMAL},
      </if>
      <if test="deliveryprice != null" >
        DeliveryPrice = #{deliveryprice,jdbcType=DECIMAL},
      </if>
      <if test="paystyle != null" >
        PayStyle = #{paystyle,jdbcType=SMALLINT},
      </if>
      <if test="paytype != null" >
        PayType = #{paytype,jdbcType=SMALLINT},
      </if>
      <if test="paystatus != null" >
        PayStatus = #{paystatus,jdbcType=SMALLINT},
      </if>
      <if test="payby != null" >
        PayBy = #{payby,jdbcType=NVARCHAR},
      </if>
      <if test="paytime != null" >
        PayTime = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="payprice != null" >
        PayPrice = #{payprice,jdbcType=DECIMAL},
      </if>
      <if test="hasuploadticket != null" >
        HasUploadTicket = #{hasuploadticket,jdbcType=BIT},
      </if>
      <if test="ticketurl != null" >
        TicketUrl = #{ticketurl,jdbcType=VARCHAR},
      </if>
      <if test="createby != null" >
        CreateBy = #{createby,jdbcType=NVARCHAR},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateby != null" >
        UpdateBy = #{updateby,jdbcType=NVARCHAR},
      </if>
      <if test="updatetime != null" >
        UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="originalorderno != null" >
        OriginalOrderNo = #{originalorderno,jdbcType=VARCHAR},
      </if>
      <if test="wxcodeurl != null" >
        WxCodeUrl = #{wxcodeurl,jdbcType=VARCHAR},
      </if>
      <if test="thirdpaystatus != null" >
        ThirdPayStatus = #{thirdpaystatus,jdbcType=SMALLINT},
      </if>
      <if test="orderCommission != null" >
        OrderCommission = #{orderCommission,jdbcType=DECIMAL},
      </if>
      <if test="settleMoney != null" >
        SettleMoney = #{settleMoney,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=TINYINT},
      </if>
      <if test="orderRegionOneId != null" >
        OrderRegionOneId = #{orderRegionOneId,jdbcType=INTEGER},
      </if>
      <if test="orderRegionTwoId != null" >
        OrderRegionTwoId = #{orderRegionTwoId,jdbcType=INTEGER},
      </if>
      <if test="commissionRate != null" >
        CommissionRate = #{commissionRate,jdbcType=DECIMAL},
      </if>
      <if test="baseCommission != null" >
        BaseCommission = #{baseCommission,jdbcType=DECIMAL},
      </if>
      <if test="websiteSubsidy != null" >
        WebsiteSubsidy = #{websiteSubsidy,jdbcType=DECIMAL},
      </if>
      <if test="adjustment != null" >
        Adjustment = #{adjustment,jdbcType=DECIMAL},
      </if>
    </set>
    where Id = #{id,jdbcType=BIGINT}
  </update>
    <select id="updateGradOne" resultType="java.lang.Integer" parameterType="com.edaisong.entity.req.OrderGrabReq" >
update dbo.OrderChild set status=2 output inserted.Id where  id in(
select top ${orderCount} id from dbo.OrderChild 
where status=0 and businessid= #{businessId}
 and orderRegionOneId=#{orderRegionOneId})
  </select>  
  <select id="updateGradTwo" resultType="java.lang.Integer" parameterType="com.edaisong.entity.req.OrderGrabReq" >
update dbo.OrderChild set status=2 output inserted.Id where  id in(
select top ${orderCount} id from dbo.OrderChild 
where status=0 and businessid= #{businessId}
and orderRegionTwoId=#{orderRegionTwoId})
  </select>  
      <select id="updateCancel" resultType="java.lang.Integer" parameterType="com.edaisong.entity.req.OrderChildCancelReq" >
update dbo.OrderChild set status=3 output inserted.Id 
   where   Platform=2 and status=0 and createTime>= '${startTime}' and '${endTime}'>=createTime
  </select>  
  <select id="selectByPrimaryKey" resultType="com.edaisong.entity.OrderChild" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from OrderChild
    where Id = #{id,jdbcType=BIGINT}
  </select>
  
    <select id="selectByOrderId" resultType="com.edaisong.entity.OrderChild" parameterType="java.lang.Long" >
    select top 1
    <include refid="Base_Column_List" />
    from OrderChild
    where orderid = #{orderid,jdbcType=BIGINT}
  </select>
  
    <select id="getOrderChildByOrderId" resultType="com.edaisong.entity.OrderChild" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from OrderChild
    where orderid = #{orderid,jdbcType=BIGINT}
  </select>
  
	<!-- 根据订单号 骑士id 查询子订单详情集合 add by caoheyang 20150804 -->
	<select id="getOrderChildByOrderInfo" parameterType="java.util.Map"
		resultType="com.edaisong.entity.OrderChild">
		select oc.Id ,oc.OrderId ,oc.ChildId ,oc.TotalPrice
		,oc.GoodPrice
		,oc.DeliveryPrice ,oc.PayStyle ,
		oc.PayType ,oc.PayStatus
		, oc.PayBy , oc.PayTime ,oc.PayPrice
		,oc.HasUploadTicket ,
		oc.TicketUrl
		,oc.CreateBy ,oc.CreateTime ,oc.UpdateBy ,oc.UpdateTime
		from
		dbo.OrderChild oc ( nolock )
		join dbo.[order] (nolock)o on
		oc.OrderId=o.Id
		where  1=1 
		<if test="OrderNo != null and OrderNo != '' ">
			and o.OrderNo = #{OrderNo,jdbcType=NVARCHAR}
		</if>
		<if test="BusinessId >0">
				and  o.businessId=#{BusinessId,jdbcType=INTEGER}
		</if>
<!-- 		o.OrderNo=#{OrderNo,jdbcType=NVARCHAR} and
		o.businessId=#{BusinessId,jdbcType=INTEGER} -->
	</select>
	
	<!--   获取任务支付状态（0：未支付 1：部分支付 2：已支付） add by caoheyang 20150831 -->
	<select id="getOrderTaskPayStatus" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT CASE SUM(oc.PayStatus) 
				WHEN 0 
				THEN 0 
			ELSE 
				CASE 
					WHEN  SUM(oc.PayStatus)=COUNT(oc.PayStatus) 
					THEN 2 
					ELSE 1 
				END 
			END PayStatus
	  FROM OrderChild oc WITH(NOLOCK)
	  WHERE OrderId=#{orderId,jdbcType=INTEGER}
	</select>
</mapper>