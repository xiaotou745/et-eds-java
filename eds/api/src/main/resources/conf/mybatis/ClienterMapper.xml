<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edaisong.api.dao.inter.IClienterDao">

	<resultMap id="BusinessClientersModelMap"
		type="com.edaisong.entity.domain.BusinessClientersModel">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="phoneno" property="phoneno" jdbcType="NVARCHAR" />
		<result column="truename" property="truename" jdbcType="NVARCHAR" />
		<result column="accountbalance" property="accountbalance"
			jdbcType="DECIMAL" />
		<result column="bussinessid" property="bussinessid" jdbcType="INTEGER" />
		<result column="workstatus" property="workstatus" jdbcType="INTEGER" />
		<result column="allowwithdrawprice" property="allowwithdrawprice"
			jdbcType="DECIMAL" />
		<result column="finishedOrderCount" property="finishedOrderCount"
			jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		Id, PhoneNo, LoginName, recommendPhone, Password, TrueName, IDCard,
		PicWithHandUrl,
		PicUrl, Status, AccountBalance, InsertTime, InviteCode, City, CityId,
		GroupId, HealthCardID,
		InternalDepart, ProvinceCode, AreaCode, CityCode, Province, BussinessID, WorkStatus,
		AllowWithdrawPrice, HasWithdrawPrice, IsBind, DeliveryCompanyId,
		Timespan,Appkey,IsReceivePush,HeadPhoto,GradeType
	</sql>

	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultType="com.edaisong.entity.Clienter">
		select
		<include refid="Base_Column_List" />
		from clienter(nolock)
		where Id = #{id,jdbcType=INTEGER}
	</select>

	<sql id="queryColumns">
		c.id,isnull(c.trueName,'''') as trueName
		,c.phoneNo,isnull(c.idCard,'''') as
		idCard,c.accountBalance,
		c.picWithHandUrl,c.picUrl,
		c.insertTime,c.workStatus,c.allowWithdrawPrice,c.status,
		isnull(g.groupName,'''') as groupName,
		isnull(dc.deliveryCompanyName,'''') as deliveryCompanyName,
		isnull(cl.PhoneNo,'''') as recommendPhone,isnull(cl.TrueName,'''') as
		recommendName
	</sql>
	<sql id="queryWhere">
		1=1
		<if test="trueName != null and trueName!=''">
			and c.trueName like ''%${trueName}%''
		</if>
		<if test="status != null and status>-1">
			and c.status=${status}
		</if>
		<if test="phoneNo != null and phoneNo!=''">
			and c.phoneNo like ''%${phoneNo}%''
		</if>
		<if test="recommendPhone != null and recommendPhone!=''">
			and cl.phoneNo like ''%${recommendPhone}%''
		</if>
		<if test="deliveryCompanyId != null and deliveryCompanyId>0">
			and c.DeliveryCompanyId=${deliveryCompanyId}
		</if>
		<if test="code != null and code!=''">
			and c.City=''${code}''
		</if>
		<if test="markId > 0" >
			and TagR.TagId = ${markId}
		</if>
	</sql>

	<sql id="queryTables">
		<if test="markId == -1" >
		dbo.clienter c with(nolock)
		left join dbo.[Group] g
		with(nolock) on c.GroupId=g.id
		left join dbo.DeliveryCompany dc
		with(nolock) on c.DeliveryCompanyId=dc.id
		left join dbo.clienter cl
		with(nolock) on c.recommendPhone=cl.PhoneNo
		join [dbo].[Fn_SplitToTable](''${authCityStr}'') AS FS ON FS.Value=c.City
		</if>
		
		<if test="markId != -1" >
		TagRelation TagR WITH (NOLOCK) 
	    join dbo.clienter c with(nolock) on TagR.UserId=C.id and TagR.UserType=1 and IsEnable=1
		left join dbo.[Group] g
		with(nolock) on c.GroupId=g.id
		left join dbo.DeliveryCompany dc
		with(nolock) on c.DeliveryCompanyId=dc.id
		left join dbo.clienter cl
		with(nolock) on c.recommendPhone=cl.PhoneNo
		join [dbo].[Fn_SplitToTable](''${authCityStr}'') AS FS ON FS.Value=c.City
		</if>
		
	</sql>
<!-- 骑士分页列表 -->
	<select id="query" resultType="com.edaisong.entity.domain.ClienterModel"
		parameterType="com.edaisong.entity.req.PagedClienterReq"
		statementType="CALLABLE">

		{call Sp_CustomPage2015_V1(
		' c.id desc ',
		'
		<include refid="queryColumns"></include>
		',
		'
		<include refid="queryTables"></include>
		',
		'
		<include refid="queryWhere"></include>
		',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER},
		1,
		#{totalRecord,mode=OUT,jdbcType=VARCHAR},
		#{totalPage,mode=OUT,jdbcType=VARCHAR}
		)}
	</select>


	<sql id="getBusinessClientersWhere">

		1=1

		<if test="!(workStatus>2)">
			and c.workstatus=${workStatus}
		</if>
		<if test="search != null and search!=''">
			and (c.trueName like ''%${search}%'' or c.phoneNo like
			''%${search}%'')
		</if>

		group by c.Id

	</sql>

	<sql id="getBusinessClientersTables">
		(SELECT c.id Id,MIN(bcr.businessid) businessid,
		MIN(c.TrueName)
		truename,
		MIN(c.PhoneNo) phoneno,
		MIN(c.WorkStatus) workstatus,
		MIN(c.AllowWithdrawPrice) allowwithdrawprice,
		sum(o.OrderCount)
		finishedOrderCount,
		min(c.AccountBalance) accountbalance
		FROM
		dbo.clienter c (nolock)
		JOIN dbo.BusinessClienterRelation bcr ON
		bcr.ClienterId = c.Id 
		left join
		dbo.[order] o (nolock) on o.clienterId=c.Id
		where bcr.BusinessId=${businessId} and bcr.IsEnable=1 and bcr.isbind=1 
		<if test="!(workStatus>=2)">
			and c.WorkStatus=${workStatus}
		</if>
		<if test="search != null and search!=''">
			and (c.trueName like ''%${search}%'' or c.phoneNo like
			''%${search}%'')
		</if>
		group by c.Id) as mp
	</sql>

	<!-- 获得商家下的所有骑士 ,包含骑士已接单的数量 add by pengyi 20150901 -->
	<select id="getBusinessClienters" resultType="com.edaisong.entity.domain.BusinessClientersModel"
		parameterType="com.edaisong.entity.req.PagedBusinessClientersReq"
		statementType="CALLABLE">

		{call Sp_CustomPage2015_V1(
		' mp.id desc ',
		' mp.id id,mp.TrueName
		truename,mp.PhoneNo phoneno,mp.WorkStatus
		workstatus,
		mp.allowwithdrawprice allowwithdrawprice,
		mp.finishedOrderCount
		finishedOrderCount,
		mp.AccountBalance accountbalance ',
		'
		<include refid="getBusinessClientersTables" />
		',
		' 1=1 ',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER},
		1,
		#{totalRecord,mode=OUT,jdbcType=INTEGER},
		#{totalPage,mode=OUT,jdbcType=INTEGER}
		)}

	</select>

	<select id="getClienterList" resultType="com.edaisong.entity.domain.ClienterModel"
		parameterType="java.util.Map">
		select c.id,c.trueName,c.phoneNo,c.idCard,c.accountBalance,
		c.picWithHandUrl,c.picUrl,
		c.insertTime,c.workStatus,c.allowWithdrawPrice,c.status,
		isnull(g.groupName,'') as groupName,
		dc.Id as
		deliveryCompanyId,isnull(dc.deliveryCompanyName,'') as
		deliveryCompanyName,
		cl.PhoneNo as recommendPhone,
		isnull(cl.TrueName+'/'+cl.PhoneNo,'') as
		recommendName
		from dbo.clienter
		c with(nolock)
		left join dbo.[Group] g with(nolock) on c.GroupId=g.id
		left join dbo.DeliveryCompany dc with(nolock) on
		c.DeliveryCompanyId=dc.id
		left join dbo.clienter cl with(nolock) on
		c.recommendPhone=cl.PhoneNo
		<if test="trueName != null">
			and g.trueName=#{trueName}
		</if>
		<if test="phoneNo != null">
			and gc.phoneNo=#{phoneNo}
		</if>
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		clienter
		where Id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.edaisong.entity.Clienter">
		insert into clienter (Id,
		PhoneNo, LoginName,
		recommendPhone, Password, TrueName,
		IDCard,
		PicWithHandUrl, PicUrl,
		Status, AccountBalance, InsertTime,
		InviteCode,
		City, CityId,
		GroupId, HealthCardID, InternalDepart,
		ProvinceCode,
		AreaCode, CityCode,
		Province, BussinessID, WorkStatus,
		AllowWithdrawPrice, HasWithdrawPrice, IsBind,
		DeliveryCompanyId)
		values
		(#{id,jdbcType=INTEGER}, #{phoneno,jdbcType=VARCHAR},
		#{loginname,jdbcType=NVARCHAR},
		#{recommendphone,jdbcType=NVARCHAR},
		#{password,jdbcType=VARCHAR}, #{truename,jdbcType=NVARCHAR},
		#{idcard,jdbcType=NVARCHAR}, #{picwithhandurl,jdbcType=NVARCHAR},
		#{picurl,jdbcType=NVARCHAR},
		#{status,jdbcType=TINYINT},
		#{accountbalance,jdbcType=NUMERIC}, #{inserttime,jdbcType=TIMESTAMP},
		#{invitecode,jdbcType=NVARCHAR}, #{city,jdbcType=NVARCHAR},
		#{cityid,jdbcType=NVARCHAR},
		#{groupid,jdbcType=INTEGER},
		#{healthcardid,jdbcType=NCHAR}, #{internaldepart,jdbcType=NVARCHAR},
		#{provincecode,jdbcType=NVARCHAR}, #{areacode,jdbcType=NVARCHAR},
		#{citycode,jdbcType=NVARCHAR},
		#{province,jdbcType=NVARCHAR},
		#{bussinessid,jdbcType=INTEGER}, #{workstatus,jdbcType=INTEGER},
		#{allowwithdrawprice,jdbcType=DECIMAL},
		#{haswithdrawprice,jdbcType=DECIMAL}, #{isbind,jdbcType=SMALLINT},
		#{deliverycompanyid,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.edaisong.entity.Clienter">
		insert into clienter
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				Id,
			</if>
			<if test="phoneno != null">
				PhoneNo,
			</if>
			<if test="loginname != null">
				LoginName,
			</if>
			<if test="recommendphone != null">
				recommendPhone,
			</if>
			<if test="password != null">
				Password,
			</if>
			<if test="truename != null">
				TrueName,
			</if>
			<if test="idcard != null">
				IDCard,
			</if>
			<if test="picwithhandurl != null">
				PicWithHandUrl,
			</if>
			<if test="picurl != null">
				PicUrl,
			</if>
			<if test="status != null">
				Status,
			</if>
			<if test="accountbalance != null">
				AccountBalance,
			</if>
			<if test="inserttime != null">
				InsertTime,
			</if>
			<if test="invitecode != null">
				InviteCode,
			</if>
			<if test="city != null">
				City,
			</if>
			<if test="cityid != null">
				CityId,
			</if>
			<if test="groupid != null">
				GroupId,
			</if>
			<if test="healthcardid != null">
				HealthCardID,
			</if>
			<if test="internaldepart != null">
				InternalDepart,
			</if>
			<if test="provincecode != null">
				ProvinceCode,
			</if>
			<if test="areacode != null">
				AreaCode,
			</if>
			<if test="citycode != null">
				CityCode,
			</if>
			<if test="province != null">
				Province,
			</if>
			<if test="bussinessid != null">
				BussinessID,
			</if>
			<if test="workstatus != null">
				WorkStatus,
			</if>
			<if test="allowwithdrawprice != null">
				AllowWithdrawPrice,
			</if>
			<if test="haswithdrawprice != null">
				HasWithdrawPrice,
			</if>
			<if test="isbind != null">
				IsBind,
			</if>
			<if test="deliverycompanyid != null">
				DeliveryCompanyId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="phoneno != null">
				#{phoneno,jdbcType=VARCHAR},
			</if>
			<if test="loginname != null">
				#{loginname,jdbcType=NVARCHAR},
			</if>
			<if test="recommendphone != null">
				#{recommendphone,jdbcType=NVARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="truename != null">
				#{truename,jdbcType=NVARCHAR},
			</if>
			<if test="idcard != null">
				#{idcard,jdbcType=NVARCHAR},
			</if>
			<if test="picwithhandurl != null">
				#{picwithhandurl,jdbcType=NVARCHAR},
			</if>
			<if test="picurl != null">
				#{picurl,jdbcType=NVARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="accountbalance != null">
				#{accountbalance,jdbcType=NUMERIC},
			</if>
			<if test="inserttime != null">
				#{inserttime,jdbcType=TIMESTAMP},
			</if>
			<if test="invitecode != null">
				#{invitecode,jdbcType=NVARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=NVARCHAR},
			</if>
			<if test="cityid != null">
				#{cityid,jdbcType=NVARCHAR},
			</if>
			<if test="groupid != null">
				#{groupid,jdbcType=INTEGER},
			</if>
			<if test="healthcardid != null">
				#{healthcardid,jdbcType=NCHAR},
			</if>
			<if test="internaldepart != null">
				#{internaldepart,jdbcType=NVARCHAR},
			</if>
			<if test="provincecode != null">
				#{provincecode,jdbcType=NVARCHAR},
			</if>
			<if test="areacode != null">
				#{areacode,jdbcType=NVARCHAR},
			</if>
			<if test="citycode != null">
				#{citycode,jdbcType=NVARCHAR},
			</if>
			<if test="province != null">
				#{province,jdbcType=NVARCHAR},
			</if>
			<if test="bussinessid != null">
				#{bussinessid,jdbcType=INTEGER},
			</if>
			<if test="workstatus != null">
				#{workstatus,jdbcType=INTEGER},
			</if>
			<if test="allowwithdrawprice != null">
				#{allowwithdrawprice,jdbcType=DECIMAL},
			</if>
			<if test="haswithdrawprice != null">
				#{haswithdrawprice,jdbcType=DECIMAL},
			</if>
			<if test="isbind != null">
				#{isbind,jdbcType=SMALLINT},
			</if>
			<if test="deliverycompanyid != null">
				#{deliverycompanyid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.edaisong.entity.Clienter">
		update clienter
		<set>
			<if test="phoneno != null">
				PhoneNo = #{phoneno,jdbcType=VARCHAR},
			</if>
			<if test="loginname != null">
				LoginName = #{loginname,jdbcType=NVARCHAR},
			</if>
			<if test="recommendphone != null">
				recommendPhone = #{recommendphone,jdbcType=NVARCHAR},
			</if>
			<if test="password != null">
				Password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="truename != null">
				TrueName = #{truename,jdbcType=NVARCHAR},
			</if>
			<if test="idcard != null">
				IDCard = #{idcard,jdbcType=NVARCHAR},
			</if>
			<if test="picwithhandurl != null">
				PicWithHandUrl = #{picwithhandurl,jdbcType=NVARCHAR},
			</if>
			<if test="picurl != null">
				PicUrl = #{picurl,jdbcType=NVARCHAR},
			</if>
			<if test="status != null">
				Status = #{status,jdbcType=TINYINT},
			</if>
			<if test="accountbalance != null">
				AccountBalance = #{accountbalance,jdbcType=NUMERIC},
			</if>
			<if test="inserttime != null">
				InsertTime = #{inserttime,jdbcType=TIMESTAMP},
			</if>
			<if test="invitecode != null">
				InviteCode = #{invitecode,jdbcType=NVARCHAR},
			</if>
			<if test="city != null">
				City = #{city,jdbcType=NVARCHAR},
			</if>
			<if test="cityid != null">
				CityId = #{cityid,jdbcType=NVARCHAR},
			</if>
			<if test="groupid != null">
				GroupId = #{groupid,jdbcType=INTEGER},
			</if>
			<if test="healthcardid != null">
				HealthCardID = #{healthcardid,jdbcType=NCHAR},
			</if>
			<if test="internaldepart != null">
				InternalDepart = #{internaldepart,jdbcType=NVARCHAR},
			</if>
			<if test="provincecode != null">
				ProvinceCode = #{provincecode,jdbcType=NVARCHAR},
			</if>
			<if test="areacode != null">
				AreaCode = #{areacode,jdbcType=NVARCHAR},
			</if>
			<if test="citycode != null">
				CityCode = #{citycode,jdbcType=NVARCHAR},
			</if>
			<if test="province != null">
				Province = #{province,jdbcType=NVARCHAR},
			</if>
			<if test="bussinessid != null">
				BussinessID = #{bussinessid,jdbcType=INTEGER},
			</if>
			<if test="workstatus != null">
				WorkStatus = #{workstatus,jdbcType=INTEGER},
			</if>
			<if test="allowwithdrawprice != null">
				AllowWithdrawPrice =
				#{allowwithdrawprice,jdbcType=DECIMAL},
			</if>
			<if test="haswithdrawprice != null">
				HasWithdrawPrice = #{haswithdrawprice,jdbcType=DECIMAL},
			</if>
			<if test="isbind != null">
				IsBind = #{isbind,jdbcType=SMALLINT},
			</if>
			<if test="deliverycompanyid != null">
				DeliveryCompanyId =
				#{deliverycompanyid,jdbcType=INTEGER},
			</if>
		</set>
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.edaisong.entity.Clienter">
		update clienter
		set PhoneNo = #{phoneno,jdbcType=VARCHAR},
		LoginName =
		#{loginname,jdbcType=NVARCHAR},
		recommendPhone =
		#{recommendphone,jdbcType=NVARCHAR},
		Password =
		#{password,jdbcType=VARCHAR},
		TrueName = #{truename,jdbcType=NVARCHAR},
		IDCard = #{idcard,jdbcType=NVARCHAR},
		PicWithHandUrl =
		#{picwithhandurl,jdbcType=NVARCHAR},
		PicUrl =
		#{picurl,jdbcType=NVARCHAR},
		Status = #{status,jdbcType=TINYINT},
		AccountBalance = #{accountbalance,jdbcType=NUMERIC},
		InsertTime =
		#{inserttime,jdbcType=TIMESTAMP},
		InviteCode =
		#{invitecode,jdbcType=NVARCHAR},
		City = #{city,jdbcType=NVARCHAR},
		CityId = #{cityid,jdbcType=NVARCHAR},
		GroupId =
		#{groupid,jdbcType=INTEGER},
		HealthCardID =
		#{healthcardid,jdbcType=NCHAR},
		InternalDepart =
		#{internaldepart,jdbcType=NVARCHAR},
		ProvinceCode =
		#{provincecode,jdbcType=NVARCHAR},
		AreaCode =
		#{areacode,jdbcType=NVARCHAR},
		CityCode =
		#{citycode,jdbcType=NVARCHAR},
		Province =
		#{province,jdbcType=NVARCHAR},
		BussinessID =
		#{bussinessid,jdbcType=INTEGER},
		WorkStatus =
		#{workstatus,jdbcType=INTEGER},
		AllowWithdrawPrice =
		#{allowwithdrawprice,jdbcType=DECIMAL},
		HasWithdrawPrice =
		#{haswithdrawprice,jdbcType=DECIMAL},
		IsBind =
		#{isbind,jdbcType=SMALLINT},
		DeliveryCompanyId =
		#{deliverycompanyid,jdbcType=INTEGER}
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateMoneyById" parameterType="com.edaisong.entity.req.ClienterOptionReq">
		update b
		set
		b.AccountBalance=ISNULL(b.AccountBalance,
		0)+#{rechargeAmount,jdbcType=DECIMAL},
		b.AllowWithdrawPrice=ISNULL(b.AllowWithdrawPrice,0)+#{rechargeAmount,jdbcType=DECIMAL}
		OUTPUT
		Inserted.Id, #{rechargeAmount,jdbcType=DECIMAL},
		Inserted.AccountBalance,
		#{recordType,jdbcType=SMALLINT},
		#{optName,jdbcType=NVARCHAR},
		#{withwardId,jdbcType=BIGINT},
		#{remark,jdbcType=NVARCHAR}
		INTO ClienterBalanceRecord
		(
		[ClienterId],[Amount],[Balance],[RecordType],[Operator],[WithwardId]
		,[Remark])
		from clienter b WITH ( ROWLOCK )
		where
		b.Id=#{clienterId,jdbcType=INTEGER};
	</update>

	<!-- 更新 骑士 余额 add by caoheyang 20150831 -->
	<update id="updateCAccountBalance" parameterType="java.util.Map">
		update clienter
		set AccountBalance=AccountBalance+ #{Money,jdbcType=DECIMAL}
		where Id=
		#{Id,jdbcType=INTEGER}
	</update>
	<!-- 更新骑士可提现金额 add by caoheyang 20150831 -->
	<update id="updateCAllowWithdrawPrice" parameterType="java.util.Map">
		update
		clienter
		set AllowWithdrawPrice=AllowWithdrawPrice+
		#{Money,jdbcType=DECIMAL}
		where Id= #{Id,jdbcType=INTEGER}
	</update>
	<!-- 更新骑士余额和可提现金额 add by caoheyang 20150831 -->
	<update id="updateCBalanceAndWithdraw" parameterType="java.util.Map">
		update
		clienter
		set AllowWithdrawPrice=AllowWithdrawPrice+
		#{Money,jdbcType=DECIMAL} ,
		AccountBalance=AccountBalance +
		#{Money,jdbcType=DECIMAL}
		where Id= #{Id,jdbcType=INTEGER}
	</update>

	<!-- 更新骑士是否绑定 add by pengyi 20150901 -->
	<update id="updateClienterIsBind" parameterType="java.util.Map">
		update clienter
		set IsBind = #{isBind,jdbcType=INTEGER} where Id =
		#{clienterId,jdbcType=INTEGER};
	</update>


	<sql id="getClienterListWhere">
		1=1
		<if test="clienterName != null and clienterName!=''">
			AND C.TrueName LIKE ''%${clienterName}%''
		</if>
		<if test="clienterPhone != null and clienterPhone!=''">
			AND C.PhoneNo LIKE ''%${clienterPhone}%''
		</if>
<!-- 		<if test="businessId!=null and businessId!=0"> -->
<!-- 			and bcr.BusinessId=${businessId} -->
<!-- 		</if> -->
<!-- 		<if test="status!=null and status>-1"> -->
<!-- 			and bcr.IsBind=${status} -->
<!-- 		</if> -->
	</sql>

	<sql id="getClienterBindInfoListTables">
		clienter C WITH (NOLOCK) left JOIN BusinessClienterRelation bcr
		with(nolock) on C.Id=bcr.ClienterId 
		and bcr.BusinessId=${businessId}
		and bcr.IsBind=0
		and bcr.IsEnable=1
	</sql>
	<!-- 获得骑士和绑定信息列表 ,不包含骑士已接单的数量 add by pengyi 20150901 -->
	<select id="getClienterBindInfoList" resultType="com.edaisong.entity.domain.ClienterBindInfoModel"
		parameterType="com.edaisong.entity.req.PagedClienterSearchReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' C.Id DESC ',
		' C.[Id] id,C.[PhoneNo]
		phoneNo,C.[TrueName]
		trueName,ISNULL(bcr.IsBind,0) isBind ',
		'
		<include refid="getClienterBindInfoListTables"></include>
		',
		'
		<include refid="getClienterListWhere"></include>
		', #{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER},
		1,
		#{totalRecord,mode=OUT,jdbcType=INTEGER},
		#{totalPage,mode=OUT,jdbcType=INTEGER}
		)}

	</select>

	<!-- 根据电话获得骑士信息 add by pengyi 20150901 -->
	<select id="getInfosByPhones" resultType="com.edaisong.entity.domain.BusinessBindClienter"
		parameterType="java.util.List">
		select trueName as name,phoneNo from clienter(nolock)
		where phoneNo in
		<foreach item="item" index="index" collection="phoneNos" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

	<!-- 根据电话获得骑士信息 add by pengyi 20150907 -->
	<select id="getNameByPhone" resultType="java.lang.String"
		parameterType="java.lang.String">
		select TrueName
		from dbo.[clienter] (nolock)
		where phoneNo
		= #{phoneNo,jdbcType=VARCHAR};
	</select>

	<!-- 根据电话和姓名获得骑士id add by pengyi 20150907 -->
	<select id="getId" resultType="java.lang.Integer" parameterType="java.util.Map">
		select ISNULL(Id,0) id
		from dbo.[clienter] (nolock)
		where phoneNo =
		#{phoneNo,jdbcType=VARCHAR} and
		TrueName=#{trueName,jdbcType=NVARCHAR};
	</select>

	<!-- 获取用户状态信息 add by caoheyang 20150911 -->
	<select id="getUserStatus" resultType="com.edaisong.entity.domain.ClienterStatus"
		parameterType="java.lang.Long">
		select
		c.WorkStatus,
		c.Id as userid ,
		c.[status] ,
		c.phoneno ,
		c.AccountBalance as amount ,
		c.AllowWithdrawPrice as AllowWithdrawPrice ,
		c.IsBind,
		ISNULL(d.Id,0) as DeliveryCompanyId,
		isnull(d.DeliveryCompanyName,'') DeliveryCompanyName,
		(case when c.DeliveryCompanyId=0 or
		(d.SettleType=1 and ClienterSettleRatio>0) or
		(d.SettleType=2 and d.ClienterFixMoney>0) then 1 else 0 end) IsDisplay
		from dbo.clienter c ( nolock )
		left join dbo.DeliveryCompany d ( nolock ) on c.DeliveryCompanyId = d.Id
		where c.Id= #{userid,jdbcType=INTEGER}
	</select>
	<!-- 获取我的商户 add by wangchao -->
	<select id="getMyBusiness" resultType="com.edaisong.entity.domain.MyBusinessModel"
		parameterType="com.edaisong.entity.req.MyBusinessReq">
	select  
		bcr.Id BindId,
		bcr.ClienterId ,
        bcr.BusinessId ,
        isnull(b.Name,'') BusinessName ,
        isnull(b.PhoneNo,'') BusinessPhoneNo ,
        isnull(b.Address,'') BusinessAddress,
        bcr.IsBind ,
        bcr.AuditStatus,
        bcr.CreateTime
from    dbo.BusinessClienterRelation bcr ( nolock )
        left join dbo.business b ( nolock ) on bcr.BusinessId = b.Id
where   bcr.ClienterId = #{clienterId,jdbcType=INTEGER} and bcr.AuditStatus = #{auditStatus,jdbcType=INTEGER} and bcr.IsEnable = 1 
	</select> 
	<!-- 获取服务中的商户数量 wangchao -->
	   <select id="getServiceBusinessTotal" resultType="com.edaisong.entity.resp.MyBusinessResp" 
    parameterType="com.edaisong.entity.req.MyBusinessReq" >
   select ISNULL(SUM(CASE 
              when AuditStatus=0 and IsBind=0 then 1
              else 0
            end),0) as shenQingZhongTotal,
        ISNULL(SUM(CASE 
              when AuditStatus=1 and IsBind=1 then 1 
              else 0
            end),0) as fuWuZhongTotal
 from   dbo.BusinessClienterRelation    a(nolock)
 where   	a.IsEnable=1 
 	<if test="clienterId != 0" >
  		AND a.[ClienterId]=${clienterId}
  	</if>
  </select>
  <!-- 闪送模式 获取骑士用户信息 wangchao -->
	<select id="getUserStatusForFlash" resultType="com.edaisong.entity.resp.ClienterUserStatusResp" parameterType="com.edaisong.entity.req.UserStatusReq" >
    	SELECT Id,PhoneNo,ISNULL(LoginName,'') LoginName ,vehicleName FROM dbo.clienter(nolock)
where Id = #{userId,jdbcType=INTEGER}
  	</select>
  	<!-- 闪送模式 修改骑士交通工具  wangchao -->
  	<update id="modifyVehicle" parameterType="com.edaisong.entity.req.ModifyVehicleReq">
		update dbo.clienter 
			set vehicleName = #{vehicleName,jdbcType=NVARCHAR} output  
			#{clienterId,jdbcType=INTEGER},
			#{clienterId,jdbcType=INTEGER},
			#{clienterName,jdbcType=NVARCHAR},
			getdate(), 
			1,'交通工具'+isnull(convert(nvarchar,Deleted.vehicleName),'')+'修改为'+isnull(convert(nvarchar,Inserted.vehicleName),'') 
			into dbo.ClienterOptionLog(ClienterId,OptId,OptName,InsertTime,[Platform],Remark)
				where Id = #{clienterId,jdbcType=INTEGER}
	</update>
	
		<!-- 闪送模式 修改骑士交通工具  wangchao -->
  	<update id="modifyPushShanSongOrderSet" parameterType="com.edaisong.entity.req.ModifyPushShanSongOrderSetReq">
		update dbo.clienter 
		set PushShanSongOrderSet = #{set}
		where Id = #{clienterId,jdbcType=INTEGER}
	</update>
	<!-- 获取骑士详情信息 -->
	<select id="getClienterDetailById" resultType="com.edaisong.entity.domain.ClienterDetailModel" parameterType="java.lang.Long">
	SELECT   c.[Id],
         c.[PhoneNo],
         c.[LoginName],
         c.[recommendPhone],
         c.[Password],
         c.[TrueName],
         c.[IDCard],
         c.[PicWithHandUrl],
         c.[PicUrl],
         c.[Status],
         c.[AccountBalance],
         c.[InsertTime],
         c.[InviteCode],
         c.[City],
         c.[CityId],
         c.[GroupId],
         c.[HealthCardID],
         c.[InternalDepart],
         c.[ProvinceCode],
         c.[AreaCode],
         c.[CityCode],
         c.[Province],
         c.[BussinessID],
         c.[WorkStatus], 
         c.DeliveryCompanyId,
         c.GradeType,       
         cfa.TrueName AccountName,
         cfa.AccountNo,
         cfa.AccountType,
         cfa.OpenBank,
         cfa.OpenSubBank
FROM clienter c WITH(NOLOCK) 
	Left join ClienterFinanceAccount cfa WITH(NOLOCK) ON c.Id=cfa.ClienterId AND cfa.IsEnable=1
WHERE c.Id = #{cid,jdbcType=BIGINT} 
	</select>
</mapper>