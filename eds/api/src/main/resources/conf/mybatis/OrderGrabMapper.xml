<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edaisong.api.dao.inter.IOrderGrabDao" >
  <resultMap id="BaseResultMap" type="com.edaisong.entity.OrderGrab" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="OrderId" property="orderid" jdbcType="INTEGER" />
    <result column="GrabOrderNo" property="graborderno" jdbcType="VARCHAR" />
    <result column="BusinessId" property="businessid" jdbcType="INTEGER" />
    <result column="ClienterId" property="clienterid" jdbcType="INTEGER" />
    <result column="OrderCount" property="ordercount" jdbcType="NCHAR" />
    <result column="Status" property="status" jdbcType="TINYINT" />
    <result column="ActualDoneDate" property="actualdonedate" jdbcType="TIMESTAMP" />
    <result column="GrabTime" property="grabtime" jdbcType="TIMESTAMP" />
    <result column="PickUpTime" property="pickuptime" jdbcType="TIMESTAMP" />
    <result column="PickUpLongitude" property="pickuplongitude" jdbcType="DOUBLE" />
    <result column="PickUpLatitude" property="pickuplatitude" jdbcType="DOUBLE" />
    <result column="GrabLongitude" property="grablongitude" jdbcType="DOUBLE" />
    <result column="GrabLatitude" property="grablatitude" jdbcType="DOUBLE" />
    <result column="DoneLongitude" property="donelongitude" jdbcType="DOUBLE" />
    <result column="DoneLatitude" property="donelatitude" jdbcType="DOUBLE" />
    <result column="OrderCommission" property="ordercommission" jdbcType="DOUBLE" />
    <result column="SettleMoney" property="settlemoney" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, OrderId, GrabOrderNo, BusinessId, ClienterId, OrderCount, Status, ActualDoneDate, 
    GrabTime, PickUpTime, PickUpLongitude, PickUpLatitude, GrabLongitude, GrabLatitude, 
    DoneLongitude, DoneLatitude, OrderCommission, SettleMoney
  </sql>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from OrderGrab
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from OrderGrab
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.edaisong.entity.OrderGrab" >
    insert into OrderGrab (Id, OrderId, GrabOrderNo, 
      BusinessId, ClienterId, OrderCount, 
      Status, ActualDoneDate, GrabTime, 
      PickUpTime, PickUpLongitude, PickUpLatitude, 
      GrabLongitude, GrabLatitude, DoneLongitude, 
      DoneLatitude, OrderCommission, SettleMoney
      )
    values (#{id,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, #{graborderno,jdbcType=VARCHAR}, 
      #{businessid,jdbcType=INTEGER}, #{clienterid,jdbcType=INTEGER}, #{ordercount,jdbcType=NCHAR}, 
      #{status,jdbcType=TINYINT}, #{actualdonedate,jdbcType=TIMESTAMP}, #{grabtime,jdbcType=TIMESTAMP}, 
      #{pickuptime,jdbcType=TIMESTAMP}, #{pickuplongitude,jdbcType=DOUBLE}, #{pickuplatitude,jdbcType=DOUBLE}, 
      #{grablongitude,jdbcType=DOUBLE}, #{grablatitude,jdbcType=DOUBLE}, #{donelongitude,jdbcType=DOUBLE}, 
      #{donelatitude,jdbcType=DOUBLE}, #{ordercommission,jdbcType=DOUBLE}, #{settlemoney,jdbcType=DOUBLE}
      )
  </insert>
	 <!-- 快单列表页面 查询列集合 add by zhaohl 20151102 -->
	<sql id="queryFrom">
		SELECT  o.id ,
        o.GrabOrderNo as orderNo ,
        a.OrderFrom ,
        b.Name as businessName,
        b.PhoneNo as businessPhone,
        ISNULL(c.TrueName, '') AS clienterName ,
        ISNULL(c.PhoneNo, '') AS clienterPhoneNo ,
        o.GrabTime ,
        o.OrderRegionOneName ,
        o.OrderRegionTwoName ,
        o.ActualDoneDate ,
        o.OrderCount ,
        o.Status
FROM    dbo.[order] a WITH ( NOLOCK )
        JOIN OrderGrabChild m WITH ( NOLOCK ) ON a.Id = m.orderid
        JOIN [ordergrab] o WITH ( NOLOCK ) ON o.Id = m.GrabOrderId
        JOIN business b WITH ( NOLOCK ) ON b.Id = m.businessId
        LEFT JOIN clienter c WITH ( NOLOCK ) ON c.Id = o.clienterId
<include refid="queryColumsWhere" />
GROUP BY o.id ,
        o.GrabOrderNo ,
        a.OrderFrom ,
        b.Name ,
        b.PhoneNo,
        c.TrueName ,
        c.PhoneNo ,
        o.GrabTime ,
        o.OrderRegionOneName ,
        o.OrderRegionTwoName ,
        o.ActualDoneDate ,
        o.OrderCount ,
        o.Status
	</sql>
	 <!-- 快单列表页面 查询列集合 add by zhaohl 20151102 -->
	<sql id="queryColumsWhere">
		1=1
		<if test="businessName != null and businessName != ''">
			and b.Name=''${businessName}''
		</if>
		<if test="businessPhone != null and businessPhone!='' ">
			and b.PhoneNo=''${businessPhone}''
		</if>
		<if test="orderNo != null and orderNo!=''">
			and o.GrabOrderNo=''${orderNo}''
		</if>
		<if test="orderStatus != null and orderStatus>-1">
			and o.Status=${orderStatus}
		</if>
		<if test="superManName != null and superManName!=''">
			and c.TrueName=''${superManName}''
		</if>
		<if test="superManPhone != null and superManPhone!='' ">
			and c.PhoneNo=''${superManPhone}''
		</if>
		<if test="orderGrabStart != null and orderGrabStart!=''">
			and o.GrabTime>= ''${orderPubStart} 00:00:00''
		</if>
		<if test="orderGrabEnd != null and orderGrabEnd!=''">
			and  ''${orderPubEnd} 23:59:59''>=o.GrabTime
		</if>
		<if test="businessCity != null and businessCity>-1">
			and b.cityCode= ${businessCity}
		</if>
	</sql>

	 <!-- 快单列表页面 查询列集合 add by zhaohl 20151102 -->
	<select id="query" resultType="com.edaisong.entity.domain.FastOrderModel"
		parameterType="com.edaisong.entity.req.PagedFastOrderSearchReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' id desc ',
		' * ',
		'
		<include refid="queryFrom" />
		',
		' 1=1 ',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER}
		,1,
		#{totalRecord,mode=OUT,jdbcType=INTEGER},
		#{totalPage,mode=OUT,jdbcType=INTEGER}
		)}
	</select>
	<select id="getMapDetailById" resultType="com.edaisong.entity.domain.FastOrderMapDetail"
		parameterType="java.lang.Long">
		SELECT  a.Pubdate ,
                m.Latitude ,
                m.Longitude ,
                c.GrabTime ,
                c.GrabLatitude ,
                c.GrabLongitude ,
                c.PickUpTime ,
                c.PickUpLatitude ,
                c.PickUpLongitude ,
                b.ActualDoneDate ,
                b.DoneLatitude ,
                b.DoneLongitude
        FROM    dbo.[order] a WITH ( NOLOCK )
                JOIN OrderGrabChild b WITH ( NOLOCK ) ON a.Id = b.OrderId
                JOIN dbo.OrderGrab c WITH ( NOLOCK ) ON c.id = b.GrabOrderId
                JOIN business m WITH ( NOLOCK ) ON b.id = m.id
                WHERE   c.Id = #{id,jdbcType=INTEGER}
	</select>
  <update id="updateByPrimaryKey" parameterType="com.edaisong.entity.OrderGrab" >
    update OrderGrab
    set OrderId = #{orderid,jdbcType=INTEGER},
      GrabOrderNo = #{graborderno,jdbcType=VARCHAR},
      BusinessId = #{businessid,jdbcType=INTEGER},
      ClienterId = #{clienterid,jdbcType=INTEGER},
      OrderCount = #{ordercount,jdbcType=NCHAR},
      Status = #{status,jdbcType=TINYINT},
      ActualDoneDate = #{actualdonedate,jdbcType=TIMESTAMP},
      GrabTime = #{grabtime,jdbcType=TIMESTAMP},
      PickUpTime = #{pickuptime,jdbcType=TIMESTAMP},
      PickUpLongitude = #{pickuplongitude,jdbcType=DOUBLE},
      PickUpLatitude = #{pickuplatitude,jdbcType=DOUBLE},
      GrabLongitude = #{grablongitude,jdbcType=DOUBLE},
      GrabLatitude = #{grablatitude,jdbcType=DOUBLE},
      DoneLongitude = #{donelongitude,jdbcType=DOUBLE},
      DoneLatitude = #{donelatitude,jdbcType=DOUBLE},
      OrderCommission = #{ordercommission,jdbcType=DOUBLE},
      SettleMoney = #{settlemoney,jdbcType=DOUBLE}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>