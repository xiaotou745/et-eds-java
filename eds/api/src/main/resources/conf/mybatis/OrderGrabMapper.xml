<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edaisong.api.dao.inter.IOrderGrabDao" >
  <sql id="Base_Column_List" >
    Id, GrabOrderNo, BusinessId, ClienterId, OrderCount, Status, ActualDoneDate, 
    GrabTime, PickUpTime, PickUpLongitude, PickUpLatitude, GrabLongitude, GrabLatitude, 
    DoneLongitude, DoneLatitude, OrderCommission, SettleMoney,OrderRegionOneId,
    OrderRegionOneName,OrderRegionTwoId ,OrderRegionTwoName,commissionRate,
    baseCommission,websitesubsidy,adjustment ,distribsubsidy
  </sql>
  <select id="selectById" resultType="com.edaisong.entity.domain.FastOrderDetail" parameterType="java.lang.Long" >
   SELECT  o.id ,
        o.GrabOrderNo ,
        a.OrderFrom ,
        b.Name AS businessName ,
        b.PhoneNo AS businessPhoneNo ,
        b.PhoneNo2 AS businessPhoneNo2 ,
        b.address as businessAddress,
        ISNULL(c.TrueName, '') AS clienterName ,
        ISNULL(c.PhoneNo, '') AS clienterPhoneNo ,
        o.OrderRegionOneName ,
        o.OrderRegionTwoName ,
        o.ActualDoneDate ,
        o.orderCommission ,
        o.OrderCount ,
        o.Status ,
        o.distribsubsidy,
        MIN(m.websitesubsidy) AS singlewebsitesubsidy ,
        MIN(m.adjustment) AS singleadjustment
FROM    dbo.[order] a WITH ( NOLOCK )
        JOIN OrderGrabChild m WITH ( NOLOCK ) ON a.Id = m.orderid
        JOIN [ordergrab] o WITH ( NOLOCK ) ON o.Id = m.GrabOrderId
        JOIN business b WITH ( NOLOCK ) ON b.Id = m.businessId
        LEFT JOIN clienter c WITH ( NOLOCK ) ON c.Id = o.clienterId
WHERE o.id = #{id,jdbcType=INTEGER} and  a.Platform = 2
GROUP BY o.id ,
        o.GrabOrderNo ,
        a.OrderFrom ,
        b.Name ,
        b.PhoneNo ,
        b.PhoneNo2 ,
        b.address ,
        c.TrueName ,
        c.PhoneNo ,
        o.OrderRegionOneName ,
        o.OrderRegionTwoName ,
        o.ActualDoneDate ,
        o.orderCommission ,
        o.OrderCount ,
        o.Status,
        o.distribsubsidy
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from OrderGrab
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.edaisong.entity.OrderGrab" >
    insert into OrderGrab (Id, OrderId, GrabOrderNo, 
      BusinessId, ClienterId, OrderCount, 
      Status, ActualDoneDate, GrabTime, 
      PickUpTime, PickUpLongitude, PickUpLatitude, 
      GrabLongitude, GrabLatitude, DoneLongitude, 
      DoneLatitude, OrderCommission, SettleMoney
      )
    values (#{id,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, #{graborderno,jdbcType=VARCHAR}, 
      #{businessid,jdbcType=INTEGER}, #{clienterid,jdbcType=INTEGER}, #{ordercount,jdbcType=NCHAR}, 
      #{status,jdbcType=TINYINT}, #{actualdonedate,jdbcType=TIMESTAMP}, #{grabtime,jdbcType=TIMESTAMP}, 
      #{pickuptime,jdbcType=TIMESTAMP}, #{pickuplongitude,jdbcType=DOUBLE}, #{pickuplatitude,jdbcType=DOUBLE}, 
      #{grablongitude,jdbcType=DOUBLE}, #{grablatitude,jdbcType=DOUBLE}, #{donelongitude,jdbcType=DOUBLE}, 
      #{donelatitude,jdbcType=DOUBLE}, #{ordercommission,jdbcType=DOUBLE}, #{settlemoney,jdbcType=DOUBLE}
      )
  </insert>
<insert id="insertSelective" parameterType="com.edaisong.entity.OrderGrab" >
<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			select @@IDENTITY as id
		</selectKey>
    insert into OrderGrab
    <trim prefix="(" suffix=")" suffixOverrides="," >    
      <if test="graborderno != null" >
        GrabOrderNo,
      </if>    
        <if test="businessid != null" >
        businessid,
      </if>
      <if test="clienterid != null" >
        ClienterId,
      </if>
      <if test="orderCount != null" >
        orderCount,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="actualdonedate != null" >
        ActualDoneDate,
      </if>
      <if test="grabtime != null" >
        GrabTime,
      </if>
      <if test="pickuptime != null" >
        PickUpTime,
      </if>
      <if test="pickuplongitude != null" >
        PickUpLongitude,
      </if>
      <if test="pickuplatitude != null" >
        PickUpLatitude,
      </if>
      <if test="grablongitude != null" >
        GrabLongitude,
      </if>
      <if test="grablatitude != null" >
        GrabLatitude,
      </if>
      <if test="donelongitude != null" >
        DoneLongitude,
      </if>
      <if test="donelatitude != null" >
        DoneLatitude,
      </if>
      <if test="orderRegionOneId != null" >
        orderRegionOneId,
      </if>
      <if test="orderRegionOneName != null" >
        orderRegionOneName,
      </if>      
       <if test="orderRegionTwoId != null" >
        orderRegionTwoId,
      </if>
      <if test="orderRegionTwoName != null" >
        orderRegionTwoName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >    
      <if test="graborderno != null" >
        #{graborderno,jdbcType=VARCHAR},
      </if>         
      <if test="businessid != null" >
        #{businessid,jdbcType=INTEGER},
      </if>
      <if test="clienterid != null" >
        #{clienterid,jdbcType=INTEGER},
      </if>
      <if test="orderCount != null" >
        #{orderCount,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="actualdonedate != null" >
        #{actualdonedate,jdbcType=TIMESTAMP},
      </if>
      <if test="grabtime != null" >
        #{grabtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pickuptime != null" >
        #{pickuptime,jdbcType=TIMESTAMP},
      </if>
      <if test="pickuplongitude != null" >
        #{pickuplongitude,jdbcType=DOUBLE},
      </if>
      <if test="pickuplatitude != null" >
        #{pickuplatitude,jdbcType=DOUBLE},
      </if>
      <if test="grablongitude != null" >
        #{grablongitude,jdbcType=DOUBLE},
      </if>
      <if test="grablatitude != null" >
        #{grablatitude,jdbcType=DOUBLE},
      </if>
      <if test="donelongitude != null" >
        #{donelongitude,jdbcType=DOUBLE},
      </if>
      <if test="donelatitude != null" >
        #{donelatitude,jdbcType=DOUBLE},
      </if>
      <if test="orderRegionOneId != null" >
        #{orderRegionOneId,jdbcType=INTEGER},
      </if>
      <if test="orderRegionOneName != null" >
        #{orderRegionOneName,jdbcType=VARCHAR},
      </if>
      
       <if test="orderRegionTwoId != null" >
        #{orderRegionTwoId ,jdbcType=INTEGER},
      </if>
      <if test="orderRegionTwoName != null" >
        #{orderRegionTwoName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
	 <!--  add by zhaohl 20151102 -->
	<sql id="queryFrom">
		(SELECT  o.id ,
        o.GrabOrderNo as orderNo ,
        a.OrderFrom ,
        b.Name as businessName,
        b.PhoneNo as businessPhoneNo,
        ISNULL(c.TrueName, '''') AS clienterName ,
        ISNULL(c.PhoneNo, '''') AS clienterPhoneNo ,
        o.GrabTime ,
        o.OrderRegionOneName ,
        o.OrderRegionTwoName ,
        o.ActualDoneDate ,
        o.OrderCount ,
        o.Status,
        o.ordercommission
FROM    dbo.[order] a WITH ( NOLOCK )
        JOIN OrderGrabChild m WITH ( NOLOCK ) ON a.Id = m.orderid
        JOIN [ordergrab] o WITH ( NOLOCK ) ON o.Id = m.GrabOrderId
        JOIN business b WITH ( NOLOCK ) ON b.Id = m.businessId
        LEFT JOIN clienter c WITH ( NOLOCK ) ON c.Id = o.clienterId 
        where <include refid="queryColumsWhere" />
GROUP BY o.id ,
        o.GrabOrderNo ,
        a.OrderFrom ,
        b.Name ,
        b.PhoneNo,
        c.TrueName ,
        c.PhoneNo ,
        o.GrabTime ,
        o.OrderRegionOneName ,
        o.OrderRegionTwoName ,
        o.ActualDoneDate ,
        o.OrderCount ,
        o.Status,
        o.ordercommission) mb 
	</sql>
	 <!-- ???��???? ????��??? add by zhaohl 20151102 -->
	<sql id="queryColumsWhere">
		a.Platform = 2
		<if test="businessName != null and businessName != ''">
			and b.Name=''${businessName}''
		</if>
		<if test="businessPhone != null and businessPhone!='' ">
			and b.PhoneNo=''${businessPhone}''
		</if>
		<if test="orderNo != null and orderNo!=''">
			and o.GrabOrderNo=''${orderNo}''
		</if>
		<if test="orderStatus != null and orderStatus>-1">
			and o.Status=${orderStatus}
		</if>
		<if test="superManName != null and superManName!=''">
			and c.TrueName=''${superManName}''
		</if>
		<if test="superManPhone != null and superManPhone!='' ">
			and c.PhoneNo=''${superManPhone}''
		</if>
		<if test="orderGrabStart != null and orderGrabStart!=''">
			and o.GrabTime>= ''${orderGrabStart} 00:00:00''
		</if>
		<if test="orderGrabEnd != null and orderGrabEnd!=''">
			and  ''${orderGrabEnd} 23:59:59''>=o.GrabTime
		</if>
		<if test="businessCity != null and businessCity>-1">
			and b.cityCode= ${businessCity}
		</if>
	</sql> 
	 <!-- ???��???? ????��??? add by zhaohl 20151102 -->
	<select id="query" resultType="com.edaisong.entity.domain.FastOrderModel"
		parameterType="com.edaisong.entity.req.PagedFastOrderSearchReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' id desc ',
		' * ',
		'
		<include refid="queryFrom" />
		',
		' 1=1 ',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER}
		,1,
		#{totalRecord,mode=OUT,jdbcType=INTEGER},
		#{totalPage,mode=OUT,jdbcType=INTEGER}
		)}
	</select>
	<select id="getMapDetailById" resultType="com.edaisong.entity.domain.FastOrderMapDetail"
		parameterType="java.lang.Long">
		SELECT  a.Pubdate ,
                m.Latitude ,
                m.Longitude ,
                c.GrabTime ,
                c.GrabLatitude ,
                c.GrabLongitude ,
                c.PickUpTime ,
                c.PickUpLatitude ,
                c.PickUpLongitude ,
                b.ActualDoneDate ,
                b.DoneLatitude ,
                b.DoneLongitude,
                b.status
        FROM    dbo.[order] a WITH ( NOLOCK )
                JOIN OrderGrabChild b WITH ( NOLOCK ) ON a.Id = b.OrderId
                JOIN dbo.OrderGrab c WITH ( NOLOCK ) ON c.id = b.GrabOrderId
                JOIN business m WITH ( NOLOCK ) ON b.businessid = m.id
                WHERE a.Platform = 2 and   c.Id = #{id,jdbcType=INTEGER}
	</select>
	<!-- 导出快单列表 zhaohl 20151103 -->
	<sql id="exportOrderWhere">
		a.Platform = 2
		<if test="businessName != null and businessName != ''">
			and b.Name='${businessName}'
		</if>
		<if test="businessPhone != null and businessPhone!='' ">
			and b.PhoneNo='${businessPhone}'
		</if>
		<if test="orderNo != null and orderNo!=''">
			and o.GrabOrderNo='${orderNo}'
		</if>
		<if test="orderStatus != null and orderStatus>-1">
			and o.Status=${orderStatus}
		</if>
		<if test="superManName != null and superManName!=''">
			and c.TrueName='${superManName}'
		</if>
		<if test="superManPhone != null and superManPhone!='' ">
			and c.PhoneNo='${superManPhone}'
		</if>
		<if test="orderGrabStart != null and orderGrabStart!=''">
			and o.GrabTime>= '${orderGrabStart} 00:00:00'
		</if>
		<if test="orderGrabEnd != null and orderGrabEnd!=''">
			and  '${orderGrabEnd} 23:59:59'>=o.GrabTime
		</if>
		<if test="businessCity != null and businessCity>-1">
			and b.cityCode= ${businessCity}
		</if>
	</sql> 
  <select id="exportOrder" resultType="com.edaisong.entity.domain.FastOrderExportModel" 
  parameterType="com.edaisong.entity.req.PagedFastOrderSearchReq" >
  SELECT  o.grabOrderNo ,
        b.Name as businessName,
        b.phoneno as businessPhoneNo,
        ISNULL(c.TrueName, '') AS clienterName ,
        ISNULL(c.PhoneNo, '') AS clienterPhoneNo ,
        o.GrabTime ,
        o.PickUpTime ,
        o.ActualDoneDate ,
        o.orderCommission ,
        o.OrderCount ,
        o.distribsubsidy ,
        o.WebsiteSubsidy,
        o.Adjustment
FROM     dbo.[order] a WITH ( NOLOCK )
        JOIN OrderGrabChild m WITH ( NOLOCK ) ON a.Id = m.orderid
        JOIN [ordergrab] o WITH ( NOLOCK ) ON o.Id = m.GrabOrderId
        JOIN business b WITH ( NOLOCK ) ON b.Id = m.businessId
        LEFT JOIN clienter c WITH ( NOLOCK ) ON c.Id = o.clienterId
      where   <include refid="exportOrderWhere" />
GROUP BY o.GrabOrderNo ,
        b.Name ,
        b.phoneno ,
        c.TrueName ,
        c.PhoneNo ,
        o.GrabTime ,
        o.PickUpTime ,
        o.ActualDoneDate ,
        o.ordercommission ,
        o.OrderCount ,
        o.distribsubsidy,
        o.WebsiteSubsidy,
        o.Adjustment
  </select>
  
  <update id="updateByPrimaryKey" parameterType="com.edaisong.entity.OrderGrab" >
    update OrderGrab
    set OrderId = #{orderid,jdbcType=INTEGER},
      GrabOrderNo = #{graborderno,jdbcType=VARCHAR},
      BusinessId = #{businessid,jdbcType=INTEGER},
      ClienterId = #{clienterid,jdbcType=INTEGER},
      OrderCount = #{ordercount,jdbcType=NCHAR},
      Status = #{status,jdbcType=TINYINT},
      ActualDoneDate = #{actualdonedate,jdbcType=TIMESTAMP},
      GrabTime = #{grabtime,jdbcType=TIMESTAMP},
      PickUpTime = #{pickuptime,jdbcType=TIMESTAMP},
      PickUpLongitude = #{pickuplongitude,jdbcType=DOUBLE},
      PickUpLatitude = #{pickuplatitude,jdbcType=DOUBLE},
      GrabLongitude = #{grablongitude,jdbcType=DOUBLE},
      GrabLatitude = #{grablatitude,jdbcType=DOUBLE},
      DoneLongitude = #{donelongitude,jdbcType=DOUBLE},
      DoneLatitude = #{donelatitude,jdbcType=DOUBLE},
      OrderCommission = #{ordercommission,jdbcType=DOUBLE},
      SettleMoney = #{settlemoney,jdbcType=DOUBLE}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 获取我的任务详情 wangchao -->
  <select id="getMyOrderGrabDetailC" resultType="com.edaisong.entity.resp.MyOrderGrabDetailResp" parameterType="com.edaisong.entity.req.OrderGrabDetailCReq" >
    select 	b.Name BusinessName ,
        	b.PhoneNo BusinessPhoneNo ,
        	b.[Address] BusinessAddress ,
            og.OrderRegionOneName ,
            og.OrderRegionTwoName ,
            og.OrderCount ,
            og.Id GrabOrderId ,
            og.GrabOrderNo , 
            isnull(og.GrabTime, '') GrabTime ,
            isnull(og.PickUpTime, '') PickUpTime ,
            isnull(og.ActualDoneDate, '') ActualDoneDate ,
            og.[Status] ,
            ( select    sum(a.OrderCommission)
              from      dbo.OrderGrabChild a ( nolock )
              where     a.GrabOrderId = #{grabOrderId,jdbcType=INTEGER}
            ) OrderCommission ,
            ( select    count(b.Id)
              from      dbo.OrderGrabChild b ( nolock )
              where     b.GrabOrderId = #{grabOrderId,jdbcType=INTEGER}
                        and b.[Status] = 1
            ) HadCompleteOrderGrab
     from   dbo.OrderGrab og ( nolock ) 
            join dbo.business b ( nolock ) on og.BusinessId = b.Id
     where  og.ClienterId = #{clienterId,jdbcType=INTEGER}
            and og.Id = #{grabOrderId,jdbcType=INTEGER}
  </select>
  <!-- 获取我的任务wangchao -->
  <select id="getMyOrderGrabC" resultType="com.edaisong.entity.resp.MyOrderGrabCResp" parameterType="com.edaisong.entity.req.MyOrderGrabCReq" >
select b.Name BusinessName ,
        b.PhoneNo BusinessPhoneNo ,
        b.[Address] BusinessAddress ,
        isnull(og.GrabTime,'') GrabTime,
        og.OrderRegionOneName ,
        og.OrderRegionTwoName ,
        og.OrderCount ,
        og.Id GrabOrderId,
        og.GrabOrderNo 
      <!-- <if test="status == 2">
		 ,round(geography::Point(ISNULL(b.Latitude,0),ISNULL(b.Longitude,0),4326).STDistance(geography::Point(#{clienterLatitude,jdbcType=DOUBLE},#{clienterLongitude,jdbcType=DOUBLE},4326)),0) as DistanceToBusiness  
	  </if> -->
	   <if test="status != 2">
		,0 DistanceToBusiness 
	  </if> 
 from   dbo.OrderGrab og ( nolock )
        join dbo.business b ( nolock ) on og.BusinessId = b.Id
 where  og.ClienterId = #{clienterId,jdbcType=INTEGER}
        and og.[Status] = #{status,jdbcType=INTEGER}
  </select>
</mapper>