<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edaisong.api.dao.inter.IOrderRegionDao" >
  <resultMap id="BaseResultMap" type="com.edaisong.entity.OrderRegion" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="BusinessId" property="businessid" jdbcType="INTEGER" />
    <result column="Name" property="name" jdbcType="NVARCHAR" />
    <result column="Coordinate" property="coordinate" jdbcType="VARCHAR" />
    <result column="ParentId" property="parentid" jdbcType="INTEGER" />
    <result column="HasChild" property="haschild" jdbcType="BIT" />
    <result column="Status" property="status" jdbcType="TINYINT" />
    <result column="WaitingCount" property="waitingcount" jdbcType="INTEGER" />
    <result column="Distributioning" property="distributioning" jdbcType="INTEGER" />
    <result column="DoneCount" property="donecount" jdbcType="INTEGER" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="CreateName" property="createname" jdbcType="NVARCHAR" />
    <result column="OptTime" property="opttime" jdbcType="TIMESTAMP" />
    <result column="OptName" property="optname" jdbcType="NVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, BusinessId, Name, Coordinate, ParentId,HasChild, Status, WaitingCount, Distributioning, 
    DoneCount, CreateTime, CreateName, OptTime, OptName
  </sql>
 
  <update id="deleteByIds" parameterType="java.util.List" >
	    update  OrderRegion set status=2 
	    where Id in
		    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
			</foreach>
  </update>
    <update id="updateHasNoChildByIds" parameterType="java.util.List" >
    update  OrderRegion set HasChild=#{hasChilds,jdbcType=INTEGER}
    where Id in
		    <foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
			#{item}
			</foreach>
  </update>
  <insert id="insert" parameterType="com.edaisong.entity.OrderRegion" >
  <selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			select @@IDENTITY as id
		</selectKey>
   insert into OrderRegion (BusinessId, Name, 
		      Coordinate, ParentId,HasChild, Status, 
		      WaitingCount, Distributioning, DoneCount, 
		      CreateTime, CreateName, OptTime, 
		      OptName)
		    values (#{businessid,jdbcType=INTEGER}, 
				      #{name,jdbcType=NVARCHAR}, 
				      #{coordinate,jdbcType=VARCHAR}, 
				      #{parentid,jdbcType=INTEGER}, 
				      #{haschild,jdbcType=INTEGER}, 
				     1, 
				      0, 
				      0, 
				      0, 
				      getdate(), 
				      #{createname,jdbcType=NVARCHAR}, 
				      getdate(), 
				      #{optname,jdbcType=NVARCHAR});
  </insert>
  
  <!-- 获取商户区域信息 wangchao --> 
  <select id="getOrderRegion" resultMap="BaseResultMap" parameterType="com.edaisong.entity.req.OrderRegionReq" >
    select 
    <include refid="Base_Column_List" />
    from OrderRegion (nolock)
    where BusinessId = #{businessId,jdbcType=INTEGER} and Status = #{status,jdbcType=INTEGER}
    order by ParentId
  </select>
  <insert id="insertRegionList" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" >
		insert into OrderRegion (BusinessId, Name, 
		      Coordinate, ParentId,HasChild, Status, 
		      WaitingCount, Distributioning, DoneCount, 
		      CreateTime, CreateName, OptTime, 
		      OptName)
		    values (#{item.businessid,jdbcType=INTEGER}, 
				      #{item.name,jdbcType=NVARCHAR}, 
				      #{item.coordinate,jdbcType=VARCHAR}, 
				      #{item.parentid,jdbcType=INTEGER}, 
				      #{item.haschild,jdbcType=INTEGER}, 
				     1, 
				      0, 
				      0, 
				      0, 
				      getdate(), 
				      #{item.createname,jdbcType=NVARCHAR}, 
				      getdate(), 
				      #{item.optname,jdbcType=NVARCHAR});
		</foreach>
	</insert>
	<update id="updateRegionList" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" >
		update OrderRegion
		    set 
		      Name = #{item.name,jdbcType=NVARCHAR},
		      OptTime = getdate(), 
		      OptName = #{item.optname,jdbcType=NVARCHAR}
		    where Id = #{item.id,jdbcType=INTEGER};
		</foreach>
	</update>
	<select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from OrderRegion (nolock)
    where id = #{id,jdbcType=INTEGER}
  </select>
  	<select id="getByIdWirte" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from OrderRegion 
    where id = #{id,jdbcType=INTEGER}
  </select>
  	<select id="getByParentId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from OrderRegion (nolock)
    where parentId = #{parentId,jdbcType=INTEGER}
  </select>
  
  	<!--  骑士端获取店内任务  获取当前骑士的所有含有未接单订单的 雇主信息    add by caoheyang 20151102-->
   <select id="getInStoreOrderRegions" resultType="com.edaisong.entity.domain.InStoreOrderRegionInfo"
    parameterType="com.edaisong.entity.req.InStoreTaskReq" >
select  a.id ,
        a.waitingCount ,
        a.Name as regionName ,
        a.BusinessId ,
        a.HasChild ,
        a.ParentId
from    OrderRegion a (nolock)
        join ( select distinct
                        ( temp.BusinessId )
               from     BusinessClienterRelation temp (nolock)
               where    temp.IsEnable = 1
                        and temp.IsBind = 1
                         and temp.AuditStatus=1
                        and  temp.ClienterId=#{clienterId,jdbcType=INTEGER} 
             ) as b on a.BusinessId = b.BusinessId  
        join ( select   ISNULL(SUM(WaitingCount), 0) as WaitingCounts ,
                        BusinessId
               from     OrderRegion tempregion (nolock)
               where    tempregion.Status = 1
               group by tempregion.BusinessId
             ) c on a.BusinessId = c.BusinessId
                    and c.WaitingCounts > 0
where   a.Status = 1 
  </select>
</mapper>